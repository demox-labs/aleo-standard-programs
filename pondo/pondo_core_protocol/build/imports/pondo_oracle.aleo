import credits.aleo;
program pondo_oracle.aleo;

struct committee_state:
    is_open as boolean;
    commission as u8;

struct bond_state:
    validator as address;
    microcredits as u64;


struct validator_datum:
    delegator as address;
    validator as address;
    block_height as u32;
    bonded_microcredits as u64;
    microcredits_yield_per_epoch as u128;
    commission as u8;
    boost as u128;

struct validator_boost:
    epoch as u32;
    boost_amount as u64;


mapping delegator_to_validator:
	key as address.public;
	value as address.public;


mapping validator_data:
	key as address.public;
	value as validator_datum.public;


mapping top_validators:
	key as u8.public;
	value as [address; 10u32].public;


mapping banned_validators:
	key as address.public;
	value as boolean.public;


mapping pondo_tvl:
	key as u8.public;
	value as u64.public;


mapping validator_boosting:
	key as address.public;
	value as validator_boost.public;


mapping control_addresses:
	key as address.public;
	value as boolean.public;


mapping delegator_allocation:
	key as u8.public;
	value as [u128; 10u32].public;


function initialize:
    async initialize into r0;
    output r0 as pondo_oracle.aleo/initialize.future;

finalize initialize:
    set true into control_addresses[aleo1am58znyhghvyj7lesu0h6wvxecxfhu8svdvgema6g5eqv7kecuzsm7z039];
    set false into control_addresses[pondo_delegator1.aleo];
    set false into control_addresses[pondo_delegator2.aleo];
    set false into control_addresses[pondo_delegator3.aleo];
    set false into control_addresses[pondo_delegator4.aleo];
    set false into control_addresses[pondo_delegator5.aleo];
    cast  370u128 260u128 160u128 120u128 90u128 90u128 90u128 90u128 90u128 90u128 into r0 as [u128; 10u32];
    set r0 into delegator_allocation[0u8];




function add_control_address:
    input r0 as address.public;
    async add_control_address r0 self.caller into r1;
    output r1 as pondo_oracle.aleo/add_control_address.future;

finalize add_control_address:
    input r0 as address.public;
    input r1 as address.public;
    get control_addresses[r1] into r2;
    assert.eq r2 true;
    set false into control_addresses[r0];




function remove_control_address:
    input r0 as address.public;
    async remove_control_address r0 self.caller into r1;
    output r1 as pondo_oracle.aleo/remove_control_address.future;

finalize remove_control_address:
    input r0 as address.public;
    input r1 as address.public;
    get control_addresses[r1] into r2;
    assert.eq r2 true;
    remove control_addresses[r0];




function update_admin:
    input r0 as address.public;
    async update_admin r0 self.caller into r1;
    output r1 as pondo_oracle.aleo/update_admin.future;

finalize update_admin:
    input r0 as address.public;
    input r1 as address.public;
    get control_addresses[r1] into r2;
    assert.eq r2 true;
    set true into control_addresses[r0];
    remove control_addresses[r1];




function update_delegator_allocations:
    input r0 as [u128; 10u32].public;
    async update_delegator_allocations r0 self.caller into r1;
    output r1 as pondo_oracle.aleo/update_delegator_allocations.future;

finalize update_delegator_allocations:
    input r0 as [u128; 10u32].public;
    input r1 as address.public;
    get control_addresses[r1] into r2;
    assert.eq r2 true;
    set r0 into delegator_allocation[0u8];




function propose_delegator:
    input r0 as address.public;
    assert.neq self.caller self.signer;
    async propose_delegator self.caller r0 into r1;
    output r1 as pondo_oracle.aleo/propose_delegator.future;

finalize propose_delegator:
    input r0 as address.public;
    input r1 as address.public;
    contains banned_validators[r1] into r2;
    assert.eq r2 false;
    contains delegator_to_validator[r0] into r3;
    assert.eq r3 false;
    set r1 into delegator_to_validator[r0];




function add_delegator:
    input r0 as address.public;
    async add_delegator r0 self.caller into r1;
    output r1 as pondo_oracle.aleo/add_delegator.future;

finalize add_delegator:
    input r0 as address.public;
    input r1 as address.public;
    get control_addresses[r1] into r2;
    assert.eq r2 true;
    contains delegator_to_validator[r0] into r3;
    assert.eq r3 true;
    get credits.aleo/withdraw[r0] into r4;
    assert.eq r4 r0;
    get delegator_to_validator[r0] into r5;
    get credits.aleo/bonded[r0] into r6;
    assert.eq r6.validator r5;
    contains banned_validators[r5] into r7;
    assert.eq r7 false;
    contains validator_data[r5] into r8;
    assert.eq r8 false;
    get credits.aleo/committee[r5] into r9;
    assert.eq r9.is_open true;
    lt r9.commission 50u8 into r10;
    assert.eq r10 true;
    cast r0 r5 block.height r6.microcredits 0u128 r9.commission 0u128 into r11 as validator_datum;
    set r11 into validator_data[r0];






function update_data:
    input r0 as address.public;
    async update_data r0 into r1;
    output r1 as pondo_oracle.aleo/update_data.future;

finalize update_data:
    input r0 as address.public;
    get validator_data[r0] into r1;
    contains banned_validators[r1.validator] into r2;
    assert.eq r2 false;
    rem block.height 120_960u32 into r3;
    gte r3 103_680u32 into r4;
    assert.eq r4 true;
    sub block.height r1.block_height into r5;
    gt r5 103_680u32 into r6;
    assert.eq r6 true;
    get credits.aleo/committee[r1.validator] into r7;
    lt r7.commission 50u8 into r8;
    assert.eq r8 true;
    assert.eq r7.is_open true;
    get credits.aleo/bonded[r0] into r9;
    div block.height 120_960u32 into r10;
    cast r9.microcredits into r11 as u128;
    cast r1.bonded_microcredits into r12 as u128;
    sub r11 r12 into r13;
    mul r13 10_000_000_000u128 into r14;
    cast r1.bonded_microcredits into r15 as u128;
    div r14 r15 into r16;
    cast 120_960u32 into r17 as u128;
    mul r16 r17 into r18;
    cast r5 into r19 as u128;
    div r18 r19 into r20;
    cast 0u32 0u64 into r21 as validator_boost;
    get.or_use validator_boosting[r1.validator] r21 into r22;
    is.eq r22.epoch r10 into r23;
    cast r22.boost_amount into r24 as u128;
    ternary r23 r24 0u128 into r25;
    get.or_use pondo_tvl[0u8] 10_000_000_000_000_000u64 into r26;
    cast r26 into r27 as u128;
    mul r25 10_000_000_000u128 into r28;
    cast r27 into r29 as u128;
    div r28 r29 into r30;
    div r1.block_height 120_960u32 into r31;
    add r31 1u32 into r32;
    is.eq r32 r10 into r33;
    add r20 r30 into r34;
    ternary r33 r34 0u128 into r35;
    cast r0 r1.validator block.height r9.microcredits r35 r7.commission r25 into r36 as validator_datum;
    set r36 into validator_data[r0];
    cast  aleo1qqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqq3ljyzc aleo1qqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqq3ljyzc aleo1qqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqq3ljyzc aleo1qqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqq3ljyzc aleo1qqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqq3ljyzc aleo1qqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqq3ljyzc aleo1qqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqq3ljyzc aleo1qqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqq3ljyzc aleo1qqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqq3ljyzc aleo1qqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqq3ljyzc into r37 as [address; 10u32];
    get.or_use top_validators[0u8] r37 into r38;
    cast aleo1qqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqq3ljyzc aleo1qqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqq3ljyzc 0u32 0u64 0u128 0u8 0u128 into r39 as validator_datum;
    get.or_use validator_data[r38[0u32]] r39 into r40;
    get.or_use validator_data[r38[1u32]] r39 into r41;
    get.or_use validator_data[r38[2u32]] r39 into r42;
    get.or_use validator_data[r38[3u32]] r39 into r43;
    get.or_use validator_data[r38[4u32]] r39 into r44;
    get.or_use validator_data[r38[5u32]] r39 into r45;
    get.or_use validator_data[r38[6u32]] r39 into r46;
    get.or_use validator_data[r38[7u32]] r39 into r47;
    get.or_use validator_data[r38[8u32]] r39 into r48;
    get.or_use validator_data[r38[9u32]] r39 into r49;
    mul r10 120_960u32 into r50;
    get delegator_allocation[0u8] into r51;
    is.eq r36.delegator r40.delegator into r52;
    is.eq r36.validator r40.validator into r53;
    lt r40.block_height r50 into r54;
    lt r36.block_height r50 into r55;
    is.eq r40.microcredits_yield_per_epoch 0u128 into r56;
    is.eq r36.microcredits_yield_per_epoch 0u128 into r57;
    mul r36.boost 1_000u128 into r58;
    div r58 r51[0u32] into r59;
    add r36.microcredits_yield_per_epoch r59 into r60;
    mul r40.boost 1_000u128 into r61;
    div r61 r51[0u32] into r62;
    add r40.microcredits_yield_per_epoch r62 into r63;
    gt r60 r63 into r64;
    lt r60 r63 into r65;
    ternary r53 r64 r65 into r66;
    ternary r66 r40.delegator r36.delegator into r67;
    ternary r66 r40.validator r36.validator into r68;
    ternary r66 r40.block_height r36.block_height into r69;
    ternary r66 r40.bonded_microcredits r36.bonded_microcredits into r70;
    ternary r66 r40.microcredits_yield_per_epoch r36.microcredits_yield_per_epoch into r71;
    ternary r66 r40.commission r36.commission into r72;
    ternary r66 r40.boost r36.boost into r73;
    cast r67 r68 r69 r70 r71 r72 r73 into r74 as validator_datum;
    ternary r66 r36.delegator r40.delegator into r75;
    ternary r66 r36.validator r40.validator into r76;
    ternary r66 r36.block_height r40.block_height into r77;
    ternary r66 r36.bonded_microcredits r40.bonded_microcredits into r78;
    ternary r66 r36.microcredits_yield_per_epoch r40.microcredits_yield_per_epoch into r79;
    ternary r66 r36.commission r40.commission into r80;
    ternary r66 r36.boost r40.boost into r81;
    cast r75 r76 r77 r78 r79 r80 r81 into r82 as validator_datum;
    ternary r66 r53 r53 into r83;
    ternary r57 r40.delegator r74.delegator into r84;
    ternary r57 r40.validator r74.validator into r85;
    ternary r57 r40.block_height r74.block_height into r86;
    ternary r57 r40.bonded_microcredits r74.bonded_microcredits into r87;
    ternary r57 r40.microcredits_yield_per_epoch r74.microcredits_yield_per_epoch into r88;
    ternary r57 r40.commission r74.commission into r89;
    ternary r57 r40.boost r74.boost into r90;
    cast r84 r85 r86 r87 r88 r89 r90 into r91 as validator_datum;
    ternary r57 r36.delegator r82.delegator into r92;
    ternary r57 r36.validator r82.validator into r93;
    ternary r57 r36.block_height r82.block_height into r94;
    ternary r57 r36.bonded_microcredits r82.bonded_microcredits into r95;
    ternary r57 r36.microcredits_yield_per_epoch r82.microcredits_yield_per_epoch into r96;
    ternary r57 r36.commission r82.commission into r97;
    ternary r57 r36.boost r82.boost into r98;
    cast r92 r93 r94 r95 r96 r97 r98 into r99 as validator_datum;
    ternary r57 r53 r83 into r100;
    ternary r56 r36.delegator r91.delegator into r101;
    ternary r56 r36.validator r91.validator into r102;
    ternary r56 r36.block_height r91.block_height into r103;
    ternary r56 r36.bonded_microcredits r91.bonded_microcredits into r104;
    ternary r56 r36.microcredits_yield_per_epoch r91.microcredits_yield_per_epoch into r105;
    ternary r56 r36.commission r91.commission into r106;
    ternary r56 r36.boost r91.boost into r107;
    cast r101 r102 r103 r104 r105 r106 r107 into r108 as validator_datum;
    ternary r56 r40.delegator r99.delegator into r109;
    ternary r56 r40.validator r99.validator into r110;
    ternary r56 r40.block_height r99.block_height into r111;
    ternary r56 r40.bonded_microcredits r99.bonded_microcredits into r112;
    ternary r56 r40.microcredits_yield_per_epoch r99.microcredits_yield_per_epoch into r113;
    ternary r56 r40.commission r99.commission into r114;
    ternary r56 r40.boost r99.boost into r115;
    cast r109 r110 r111 r112 r113 r114 r115 into r116 as validator_datum;
    ternary r56 r53 r100 into r117;
    ternary r55 r40.delegator r108.delegator into r118;
    ternary r55 r40.validator r108.validator into r119;
    ternary r55 r40.block_height r108.block_height into r120;
    ternary r55 r40.bonded_microcredits r108.bonded_microcredits into r121;
    ternary r55 r40.microcredits_yield_per_epoch r108.microcredits_yield_per_epoch into r122;
    ternary r55 r40.commission r108.commission into r123;
    ternary r55 r40.boost r108.boost into r124;
    cast r118 r119 r120 r121 r122 r123 r124 into r125 as validator_datum;
    ternary r55 r36.delegator r116.delegator into r126;
    ternary r55 r36.validator r116.validator into r127;
    ternary r55 r36.block_height r116.block_height into r128;
    ternary r55 r36.bonded_microcredits r116.bonded_microcredits into r129;
    ternary r55 r36.microcredits_yield_per_epoch r116.microcredits_yield_per_epoch into r130;
    ternary r55 r36.commission r116.commission into r131;
    ternary r55 r36.boost r116.boost into r132;
    cast r126 r127 r128 r129 r130 r131 r132 into r133 as validator_datum;
    ternary r55 r53 r117 into r134;
    ternary r54 r36.delegator r125.delegator into r135;
    ternary r54 r36.validator r125.validator into r136;
    ternary r54 r36.block_height r125.block_height into r137;
    ternary r54 r36.bonded_microcredits r125.bonded_microcredits into r138;
    ternary r54 r36.microcredits_yield_per_epoch r125.microcredits_yield_per_epoch into r139;
    ternary r54 r36.commission r125.commission into r140;
    ternary r54 r36.boost r125.boost into r141;
    cast r135 r136 r137 r138 r139 r140 r141 into r142 as validator_datum;
    ternary r54 r40.delegator r133.delegator into r143;
    ternary r54 r40.validator r133.validator into r144;
    ternary r54 r40.block_height r133.block_height into r145;
    ternary r54 r40.bonded_microcredits r133.bonded_microcredits into r146;
    ternary r54 r40.microcredits_yield_per_epoch r133.microcredits_yield_per_epoch into r147;
    ternary r54 r40.commission r133.commission into r148;
    ternary r54 r40.boost r133.boost into r149;
    cast r143 r144 r145 r146 r147 r148 r149 into r150 as validator_datum;
    ternary r54 r53 r134 into r151;
    ternary r52 r36.delegator r142.delegator into r152;
    ternary r52 r36.validator r142.validator into r153;
    ternary r52 r36.block_height r142.block_height into r154;
    ternary r52 r36.bonded_microcredits r142.bonded_microcredits into r155;
    ternary r52 r36.microcredits_yield_per_epoch r142.microcredits_yield_per_epoch into r156;
    ternary r52 r36.commission r142.commission into r157;
    ternary r52 r36.boost r142.boost into r158;
    cast r152 r153 r154 r155 r156 r157 r158 into r159 as validator_datum;
    ternary r52 r40.delegator r150.delegator into r160;
    ternary r52 r40.validator r150.validator into r161;
    ternary r52 r40.block_height r150.block_height into r162;
    ternary r52 r40.bonded_microcredits r150.bonded_microcredits into r163;
    ternary r52 r40.microcredits_yield_per_epoch r150.microcredits_yield_per_epoch into r164;
    ternary r52 r40.commission r150.commission into r165;
    ternary r52 r40.boost r150.boost into r166;
    cast r160 r161 r162 r163 r164 r165 r166 into r167 as validator_datum;
    ternary r52 true r151 into r168;
    ternary false r40.delegator r159.delegator into r169;
    ternary false r40.validator r159.validator into r170;
    ternary false r40.block_height r159.block_height into r171;
    ternary false r40.bonded_microcredits r159.bonded_microcredits into r172;
    ternary false r40.microcredits_yield_per_epoch r159.microcredits_yield_per_epoch into r173;
    ternary false r40.commission r159.commission into r174;
    ternary false r40.boost r159.boost into r175;
    cast r169 r170 r171 r172 r173 r174 r175 into r176 as validator_datum;
    ternary false r36.delegator r167.delegator into r177;
    ternary false r36.validator r167.validator into r178;
    ternary false r36.block_height r167.block_height into r179;
    ternary false r36.bonded_microcredits r167.bonded_microcredits into r180;
    ternary false r36.microcredits_yield_per_epoch r167.microcredits_yield_per_epoch into r181;
    ternary false r36.commission r167.commission into r182;
    ternary false r36.boost r167.boost into r183;
    cast r177 r178 r179 r180 r181 r182 r183 into r184 as validator_datum;
    ternary false true r168 into r185;
    is.eq r184.delegator r41.delegator into r186;
    is.eq r184.validator r41.validator into r187;
    lt r41.block_height r50 into r188;
    lt r184.block_height r50 into r189;
    is.eq r41.microcredits_yield_per_epoch 0u128 into r190;
    is.eq r184.microcredits_yield_per_epoch 0u128 into r191;
    mul r184.boost 1_000u128 into r192;
    div r192 r51[1u32] into r193;
    add r184.microcredits_yield_per_epoch r193 into r194;
    mul r41.boost 1_000u128 into r195;
    div r195 r51[1u32] into r196;
    add r41.microcredits_yield_per_epoch r196 into r197;
    gt r194 r197 into r198;
    lt r194 r197 into r199;
    ternary r187 r198 r199 into r200;
    ternary r200 r41.delegator r184.delegator into r201;
    ternary r200 r41.validator r184.validator into r202;
    ternary r200 r41.block_height r184.block_height into r203;
    ternary r200 r41.bonded_microcredits r184.bonded_microcredits into r204;
    ternary r200 r41.microcredits_yield_per_epoch r184.microcredits_yield_per_epoch into r205;
    ternary r200 r41.commission r184.commission into r206;
    ternary r200 r41.boost r184.boost into r207;
    cast r201 r202 r203 r204 r205 r206 r207 into r208 as validator_datum;
    ternary r200 r184.delegator r41.delegator into r209;
    ternary r200 r184.validator r41.validator into r210;
    ternary r200 r184.block_height r41.block_height into r211;
    ternary r200 r184.bonded_microcredits r41.bonded_microcredits into r212;
    ternary r200 r184.microcredits_yield_per_epoch r41.microcredits_yield_per_epoch into r213;
    ternary r200 r184.commission r41.commission into r214;
    ternary r200 r184.boost r41.boost into r215;
    cast r209 r210 r211 r212 r213 r214 r215 into r216 as validator_datum;
    ternary r200 r187 r187 into r217;
    ternary r191 r41.delegator r208.delegator into r218;
    ternary r191 r41.validator r208.validator into r219;
    ternary r191 r41.block_height r208.block_height into r220;
    ternary r191 r41.bonded_microcredits r208.bonded_microcredits into r221;
    ternary r191 r41.microcredits_yield_per_epoch r208.microcredits_yield_per_epoch into r222;
    ternary r191 r41.commission r208.commission into r223;
    ternary r191 r41.boost r208.boost into r224;
    cast r218 r219 r220 r221 r222 r223 r224 into r225 as validator_datum;
    ternary r191 r184.delegator r216.delegator into r226;
    ternary r191 r184.validator r216.validator into r227;
    ternary r191 r184.block_height r216.block_height into r228;
    ternary r191 r184.bonded_microcredits r216.bonded_microcredits into r229;
    ternary r191 r184.microcredits_yield_per_epoch r216.microcredits_yield_per_epoch into r230;
    ternary r191 r184.commission r216.commission into r231;
    ternary r191 r184.boost r216.boost into r232;
    cast r226 r227 r228 r229 r230 r231 r232 into r233 as validator_datum;
    ternary r191 r187 r217 into r234;
    ternary r190 r184.delegator r225.delegator into r235;
    ternary r190 r184.validator r225.validator into r236;
    ternary r190 r184.block_height r225.block_height into r237;
    ternary r190 r184.bonded_microcredits r225.bonded_microcredits into r238;
    ternary r190 r184.microcredits_yield_per_epoch r225.microcredits_yield_per_epoch into r239;
    ternary r190 r184.commission r225.commission into r240;
    ternary r190 r184.boost r225.boost into r241;
    cast r235 r236 r237 r238 r239 r240 r241 into r242 as validator_datum;
    ternary r190 r41.delegator r233.delegator into r243;
    ternary r190 r41.validator r233.validator into r244;
    ternary r190 r41.block_height r233.block_height into r245;
    ternary r190 r41.bonded_microcredits r233.bonded_microcredits into r246;
    ternary r190 r41.microcredits_yield_per_epoch r233.microcredits_yield_per_epoch into r247;
    ternary r190 r41.commission r233.commission into r248;
    ternary r190 r41.boost r233.boost into r249;
    cast r243 r244 r245 r246 r247 r248 r249 into r250 as validator_datum;
    ternary r190 r187 r234 into r251;
    ternary r189 r41.delegator r242.delegator into r252;
    ternary r189 r41.validator r242.validator into r253;
    ternary r189 r41.block_height r242.block_height into r254;
    ternary r189 r41.bonded_microcredits r242.bonded_microcredits into r255;
    ternary r189 r41.microcredits_yield_per_epoch r242.microcredits_yield_per_epoch into r256;
    ternary r189 r41.commission r242.commission into r257;
    ternary r189 r41.boost r242.boost into r258;
    cast r252 r253 r254 r255 r256 r257 r258 into r259 as validator_datum;
    ternary r189 r184.delegator r250.delegator into r260;
    ternary r189 r184.validator r250.validator into r261;
    ternary r189 r184.block_height r250.block_height into r262;
    ternary r189 r184.bonded_microcredits r250.bonded_microcredits into r263;
    ternary r189 r184.microcredits_yield_per_epoch r250.microcredits_yield_per_epoch into r264;
    ternary r189 r184.commission r250.commission into r265;
    ternary r189 r184.boost r250.boost into r266;
    cast r260 r261 r262 r263 r264 r265 r266 into r267 as validator_datum;
    ternary r189 r187 r251 into r268;
    ternary r188 r184.delegator r259.delegator into r269;
    ternary r188 r184.validator r259.validator into r270;
    ternary r188 r184.block_height r259.block_height into r271;
    ternary r188 r184.bonded_microcredits r259.bonded_microcredits into r272;
    ternary r188 r184.microcredits_yield_per_epoch r259.microcredits_yield_per_epoch into r273;
    ternary r188 r184.commission r259.commission into r274;
    ternary r188 r184.boost r259.boost into r275;
    cast r269 r270 r271 r272 r273 r274 r275 into r276 as validator_datum;
    ternary r188 r41.delegator r267.delegator into r277;
    ternary r188 r41.validator r267.validator into r278;
    ternary r188 r41.block_height r267.block_height into r279;
    ternary r188 r41.bonded_microcredits r267.bonded_microcredits into r280;
    ternary r188 r41.microcredits_yield_per_epoch r267.microcredits_yield_per_epoch into r281;
    ternary r188 r41.commission r267.commission into r282;
    ternary r188 r41.boost r267.boost into r283;
    cast r277 r278 r279 r280 r281 r282 r283 into r284 as validator_datum;
    ternary r188 r187 r268 into r285;
    ternary r186 r184.delegator r276.delegator into r286;
    ternary r186 r184.validator r276.validator into r287;
    ternary r186 r184.block_height r276.block_height into r288;
    ternary r186 r184.bonded_microcredits r276.bonded_microcredits into r289;
    ternary r186 r184.microcredits_yield_per_epoch r276.microcredits_yield_per_epoch into r290;
    ternary r186 r184.commission r276.commission into r291;
    ternary r186 r184.boost r276.boost into r292;
    cast r286 r287 r288 r289 r290 r291 r292 into r293 as validator_datum;
    ternary r186 r41.delegator r284.delegator into r294;
    ternary r186 r41.validator r284.validator into r295;
    ternary r186 r41.block_height r284.block_height into r296;
    ternary r186 r41.bonded_microcredits r284.bonded_microcredits into r297;
    ternary r186 r41.microcredits_yield_per_epoch r284.microcredits_yield_per_epoch into r298;
    ternary r186 r41.commission r284.commission into r299;
    ternary r186 r41.boost r284.boost into r300;
    cast r294 r295 r296 r297 r298 r299 r300 into r301 as validator_datum;
    ternary r186 true r285 into r302;
    ternary r185 r41.delegator r293.delegator into r303;
    ternary r185 r41.validator r293.validator into r304;
    ternary r185 r41.block_height r293.block_height into r305;
    ternary r185 r41.bonded_microcredits r293.bonded_microcredits into r306;
    ternary r185 r41.microcredits_yield_per_epoch r293.microcredits_yield_per_epoch into r307;
    ternary r185 r41.commission r293.commission into r308;
    ternary r185 r41.boost r293.boost into r309;
    cast r303 r304 r305 r306 r307 r308 r309 into r310 as validator_datum;
    ternary r185 r184.delegator r301.delegator into r311;
    ternary r185 r184.validator r301.validator into r312;
    ternary r185 r184.block_height r301.block_height into r313;
    ternary r185 r184.bonded_microcredits r301.bonded_microcredits into r314;
    ternary r185 r184.microcredits_yield_per_epoch r301.microcredits_yield_per_epoch into r315;
    ternary r185 r184.commission r301.commission into r316;
    ternary r185 r184.boost r301.boost into r317;
    cast r311 r312 r313 r314 r315 r316 r317 into r318 as validator_datum;
    ternary r185 true r302 into r319;
    is.eq r318.delegator r42.delegator into r320;
    is.eq r318.validator r42.validator into r321;
    lt r42.block_height r50 into r322;
    lt r318.block_height r50 into r323;
    is.eq r42.microcredits_yield_per_epoch 0u128 into r324;
    is.eq r318.microcredits_yield_per_epoch 0u128 into r325;
    mul r318.boost 1_000u128 into r326;
    div r326 r51[2u32] into r327;
    add r318.microcredits_yield_per_epoch r327 into r328;
    mul r42.boost 1_000u128 into r329;
    div r329 r51[2u32] into r330;
    add r42.microcredits_yield_per_epoch r330 into r331;
    gt r328 r331 into r332;
    lt r328 r331 into r333;
    ternary r321 r332 r333 into r334;
    ternary r334 r42.delegator r318.delegator into r335;
    ternary r334 r42.validator r318.validator into r336;
    ternary r334 r42.block_height r318.block_height into r337;
    ternary r334 r42.bonded_microcredits r318.bonded_microcredits into r338;
    ternary r334 r42.microcredits_yield_per_epoch r318.microcredits_yield_per_epoch into r339;
    ternary r334 r42.commission r318.commission into r340;
    ternary r334 r42.boost r318.boost into r341;
    cast r335 r336 r337 r338 r339 r340 r341 into r342 as validator_datum;
    ternary r334 r318.delegator r42.delegator into r343;
    ternary r334 r318.validator r42.validator into r344;
    ternary r334 r318.block_height r42.block_height into r345;
    ternary r334 r318.bonded_microcredits r42.bonded_microcredits into r346;
    ternary r334 r318.microcredits_yield_per_epoch r42.microcredits_yield_per_epoch into r347;
    ternary r334 r318.commission r42.commission into r348;
    ternary r334 r318.boost r42.boost into r349;
    cast r343 r344 r345 r346 r347 r348 r349 into r350 as validator_datum;
    ternary r334 r321 r321 into r351;
    ternary r325 r42.delegator r342.delegator into r352;
    ternary r325 r42.validator r342.validator into r353;
    ternary r325 r42.block_height r342.block_height into r354;
    ternary r325 r42.bonded_microcredits r342.bonded_microcredits into r355;
    ternary r325 r42.microcredits_yield_per_epoch r342.microcredits_yield_per_epoch into r356;
    ternary r325 r42.commission r342.commission into r357;
    ternary r325 r42.boost r342.boost into r358;
    cast r352 r353 r354 r355 r356 r357 r358 into r359 as validator_datum;
    ternary r325 r318.delegator r350.delegator into r360;
    ternary r325 r318.validator r350.validator into r361;
    ternary r325 r318.block_height r350.block_height into r362;
    ternary r325 r318.bonded_microcredits r350.bonded_microcredits into r363;
    ternary r325 r318.microcredits_yield_per_epoch r350.microcredits_yield_per_epoch into r364;
    ternary r325 r318.commission r350.commission into r365;
    ternary r325 r318.boost r350.boost into r366;
    cast r360 r361 r362 r363 r364 r365 r366 into r367 as validator_datum;
    ternary r325 r321 r351 into r368;
    ternary r324 r318.delegator r359.delegator into r369;
    ternary r324 r318.validator r359.validator into r370;
    ternary r324 r318.block_height r359.block_height into r371;
    ternary r324 r318.bonded_microcredits r359.bonded_microcredits into r372;
    ternary r324 r318.microcredits_yield_per_epoch r359.microcredits_yield_per_epoch into r373;
    ternary r324 r318.commission r359.commission into r374;
    ternary r324 r318.boost r359.boost into r375;
    cast r369 r370 r371 r372 r373 r374 r375 into r376 as validator_datum;
    ternary r324 r42.delegator r367.delegator into r377;
    ternary r324 r42.validator r367.validator into r378;
    ternary r324 r42.block_height r367.block_height into r379;
    ternary r324 r42.bonded_microcredits r367.bonded_microcredits into r380;
    ternary r324 r42.microcredits_yield_per_epoch r367.microcredits_yield_per_epoch into r381;
    ternary r324 r42.commission r367.commission into r382;
    ternary r324 r42.boost r367.boost into r383;
    cast r377 r378 r379 r380 r381 r382 r383 into r384 as validator_datum;
    ternary r324 r321 r368 into r385;
    ternary r323 r42.delegator r376.delegator into r386;
    ternary r323 r42.validator r376.validator into r387;
    ternary r323 r42.block_height r376.block_height into r388;
    ternary r323 r42.bonded_microcredits r376.bonded_microcredits into r389;
    ternary r323 r42.microcredits_yield_per_epoch r376.microcredits_yield_per_epoch into r390;
    ternary r323 r42.commission r376.commission into r391;
    ternary r323 r42.boost r376.boost into r392;
    cast r386 r387 r388 r389 r390 r391 r392 into r393 as validator_datum;
    ternary r323 r318.delegator r384.delegator into r394;
    ternary r323 r318.validator r384.validator into r395;
    ternary r323 r318.block_height r384.block_height into r396;
    ternary r323 r318.bonded_microcredits r384.bonded_microcredits into r397;
    ternary r323 r318.microcredits_yield_per_epoch r384.microcredits_yield_per_epoch into r398;
    ternary r323 r318.commission r384.commission into r399;
    ternary r323 r318.boost r384.boost into r400;
    cast r394 r395 r396 r397 r398 r399 r400 into r401 as validator_datum;
    ternary r323 r321 r385 into r402;
    ternary r322 r318.delegator r393.delegator into r403;
    ternary r322 r318.validator r393.validator into r404;
    ternary r322 r318.block_height r393.block_height into r405;
    ternary r322 r318.bonded_microcredits r393.bonded_microcredits into r406;
    ternary r322 r318.microcredits_yield_per_epoch r393.microcredits_yield_per_epoch into r407;
    ternary r322 r318.commission r393.commission into r408;
    ternary r322 r318.boost r393.boost into r409;
    cast r403 r404 r405 r406 r407 r408 r409 into r410 as validator_datum;
    ternary r322 r42.delegator r401.delegator into r411;
    ternary r322 r42.validator r401.validator into r412;
    ternary r322 r42.block_height r401.block_height into r413;
    ternary r322 r42.bonded_microcredits r401.bonded_microcredits into r414;
    ternary r322 r42.microcredits_yield_per_epoch r401.microcredits_yield_per_epoch into r415;
    ternary r322 r42.commission r401.commission into r416;
    ternary r322 r42.boost r401.boost into r417;
    cast r411 r412 r413 r414 r415 r416 r417 into r418 as validator_datum;
    ternary r322 r321 r402 into r419;
    ternary r320 r318.delegator r410.delegator into r420;
    ternary r320 r318.validator r410.validator into r421;
    ternary r320 r318.block_height r410.block_height into r422;
    ternary r320 r318.bonded_microcredits r410.bonded_microcredits into r423;
    ternary r320 r318.microcredits_yield_per_epoch r410.microcredits_yield_per_epoch into r424;
    ternary r320 r318.commission r410.commission into r425;
    ternary r320 r318.boost r410.boost into r426;
    cast r420 r421 r422 r423 r424 r425 r426 into r427 as validator_datum;
    ternary r320 r42.delegator r418.delegator into r428;
    ternary r320 r42.validator r418.validator into r429;
    ternary r320 r42.block_height r418.block_height into r430;
    ternary r320 r42.bonded_microcredits r418.bonded_microcredits into r431;
    ternary r320 r42.microcredits_yield_per_epoch r418.microcredits_yield_per_epoch into r432;
    ternary r320 r42.commission r418.commission into r433;
    ternary r320 r42.boost r418.boost into r434;
    cast r428 r429 r430 r431 r432 r433 r434 into r435 as validator_datum;
    ternary r320 true r419 into r436;
    ternary r319 r42.delegator r427.delegator into r437;
    ternary r319 r42.validator r427.validator into r438;
    ternary r319 r42.block_height r427.block_height into r439;
    ternary r319 r42.bonded_microcredits r427.bonded_microcredits into r440;
    ternary r319 r42.microcredits_yield_per_epoch r427.microcredits_yield_per_epoch into r441;
    ternary r319 r42.commission r427.commission into r442;
    ternary r319 r42.boost r427.boost into r443;
    cast r437 r438 r439 r440 r441 r442 r443 into r444 as validator_datum;
    ternary r319 r318.delegator r435.delegator into r445;
    ternary r319 r318.validator r435.validator into r446;
    ternary r319 r318.block_height r435.block_height into r447;
    ternary r319 r318.bonded_microcredits r435.bonded_microcredits into r448;
    ternary r319 r318.microcredits_yield_per_epoch r435.microcredits_yield_per_epoch into r449;
    ternary r319 r318.commission r435.commission into r450;
    ternary r319 r318.boost r435.boost into r451;
    cast r445 r446 r447 r448 r449 r450 r451 into r452 as validator_datum;
    ternary r319 true r436 into r453;
    is.eq r452.delegator r43.delegator into r454;
    is.eq r452.validator r43.validator into r455;
    lt r43.block_height r50 into r456;
    lt r452.block_height r50 into r457;
    is.eq r43.microcredits_yield_per_epoch 0u128 into r458;
    is.eq r452.microcredits_yield_per_epoch 0u128 into r459;
    mul r452.boost 1_000u128 into r460;
    div r460 r51[3u32] into r461;
    add r452.microcredits_yield_per_epoch r461 into r462;
    mul r43.boost 1_000u128 into r463;
    div r463 r51[3u32] into r464;
    add r43.microcredits_yield_per_epoch r464 into r465;
    gt r462 r465 into r466;
    lt r462 r465 into r467;
    ternary r455 r466 r467 into r468;
    ternary r468 r43.delegator r452.delegator into r469;
    ternary r468 r43.validator r452.validator into r470;
    ternary r468 r43.block_height r452.block_height into r471;
    ternary r468 r43.bonded_microcredits r452.bonded_microcredits into r472;
    ternary r468 r43.microcredits_yield_per_epoch r452.microcredits_yield_per_epoch into r473;
    ternary r468 r43.commission r452.commission into r474;
    ternary r468 r43.boost r452.boost into r475;
    cast r469 r470 r471 r472 r473 r474 r475 into r476 as validator_datum;
    ternary r468 r452.delegator r43.delegator into r477;
    ternary r468 r452.validator r43.validator into r478;
    ternary r468 r452.block_height r43.block_height into r479;
    ternary r468 r452.bonded_microcredits r43.bonded_microcredits into r480;
    ternary r468 r452.microcredits_yield_per_epoch r43.microcredits_yield_per_epoch into r481;
    ternary r468 r452.commission r43.commission into r482;
    ternary r468 r452.boost r43.boost into r483;
    cast r477 r478 r479 r480 r481 r482 r483 into r484 as validator_datum;
    ternary r468 r455 r455 into r485;
    ternary r459 r43.delegator r476.delegator into r486;
    ternary r459 r43.validator r476.validator into r487;
    ternary r459 r43.block_height r476.block_height into r488;
    ternary r459 r43.bonded_microcredits r476.bonded_microcredits into r489;
    ternary r459 r43.microcredits_yield_per_epoch r476.microcredits_yield_per_epoch into r490;
    ternary r459 r43.commission r476.commission into r491;
    ternary r459 r43.boost r476.boost into r492;
    cast r486 r487 r488 r489 r490 r491 r492 into r493 as validator_datum;
    ternary r459 r452.delegator r484.delegator into r494;
    ternary r459 r452.validator r484.validator into r495;
    ternary r459 r452.block_height r484.block_height into r496;
    ternary r459 r452.bonded_microcredits r484.bonded_microcredits into r497;
    ternary r459 r452.microcredits_yield_per_epoch r484.microcredits_yield_per_epoch into r498;
    ternary r459 r452.commission r484.commission into r499;
    ternary r459 r452.boost r484.boost into r500;
    cast r494 r495 r496 r497 r498 r499 r500 into r501 as validator_datum;
    ternary r459 r455 r485 into r502;
    ternary r458 r452.delegator r493.delegator into r503;
    ternary r458 r452.validator r493.validator into r504;
    ternary r458 r452.block_height r493.block_height into r505;
    ternary r458 r452.bonded_microcredits r493.bonded_microcredits into r506;
    ternary r458 r452.microcredits_yield_per_epoch r493.microcredits_yield_per_epoch into r507;
    ternary r458 r452.commission r493.commission into r508;
    ternary r458 r452.boost r493.boost into r509;
    cast r503 r504 r505 r506 r507 r508 r509 into r510 as validator_datum;
    ternary r458 r43.delegator r501.delegator into r511;
    ternary r458 r43.validator r501.validator into r512;
    ternary r458 r43.block_height r501.block_height into r513;
    ternary r458 r43.bonded_microcredits r501.bonded_microcredits into r514;
    ternary r458 r43.microcredits_yield_per_epoch r501.microcredits_yield_per_epoch into r515;
    ternary r458 r43.commission r501.commission into r516;
    ternary r458 r43.boost r501.boost into r517;
    cast r511 r512 r513 r514 r515 r516 r517 into r518 as validator_datum;
    ternary r458 r455 r502 into r519;
    ternary r457 r43.delegator r510.delegator into r520;
    ternary r457 r43.validator r510.validator into r521;
    ternary r457 r43.block_height r510.block_height into r522;
    ternary r457 r43.bonded_microcredits r510.bonded_microcredits into r523;
    ternary r457 r43.microcredits_yield_per_epoch r510.microcredits_yield_per_epoch into r524;
    ternary r457 r43.commission r510.commission into r525;
    ternary r457 r43.boost r510.boost into r526;
    cast r520 r521 r522 r523 r524 r525 r526 into r527 as validator_datum;
    ternary r457 r452.delegator r518.delegator into r528;
    ternary r457 r452.validator r518.validator into r529;
    ternary r457 r452.block_height r518.block_height into r530;
    ternary r457 r452.bonded_microcredits r518.bonded_microcredits into r531;
    ternary r457 r452.microcredits_yield_per_epoch r518.microcredits_yield_per_epoch into r532;
    ternary r457 r452.commission r518.commission into r533;
    ternary r457 r452.boost r518.boost into r534;
    cast r528 r529 r530 r531 r532 r533 r534 into r535 as validator_datum;
    ternary r457 r455 r519 into r536;
    ternary r456 r452.delegator r527.delegator into r537;
    ternary r456 r452.validator r527.validator into r538;
    ternary r456 r452.block_height r527.block_height into r539;
    ternary r456 r452.bonded_microcredits r527.bonded_microcredits into r540;
    ternary r456 r452.microcredits_yield_per_epoch r527.microcredits_yield_per_epoch into r541;
    ternary r456 r452.commission r527.commission into r542;
    ternary r456 r452.boost r527.boost into r543;
    cast r537 r538 r539 r540 r541 r542 r543 into r544 as validator_datum;
    ternary r456 r43.delegator r535.delegator into r545;
    ternary r456 r43.validator r535.validator into r546;
    ternary r456 r43.block_height r535.block_height into r547;
    ternary r456 r43.bonded_microcredits r535.bonded_microcredits into r548;
    ternary r456 r43.microcredits_yield_per_epoch r535.microcredits_yield_per_epoch into r549;
    ternary r456 r43.commission r535.commission into r550;
    ternary r456 r43.boost r535.boost into r551;
    cast r545 r546 r547 r548 r549 r550 r551 into r552 as validator_datum;
    ternary r456 r455 r536 into r553;
    ternary r454 r452.delegator r544.delegator into r554;
    ternary r454 r452.validator r544.validator into r555;
    ternary r454 r452.block_height r544.block_height into r556;
    ternary r454 r452.bonded_microcredits r544.bonded_microcredits into r557;
    ternary r454 r452.microcredits_yield_per_epoch r544.microcredits_yield_per_epoch into r558;
    ternary r454 r452.commission r544.commission into r559;
    ternary r454 r452.boost r544.boost into r560;
    cast r554 r555 r556 r557 r558 r559 r560 into r561 as validator_datum;
    ternary r454 r43.delegator r552.delegator into r562;
    ternary r454 r43.validator r552.validator into r563;
    ternary r454 r43.block_height r552.block_height into r564;
    ternary r454 r43.bonded_microcredits r552.bonded_microcredits into r565;
    ternary r454 r43.microcredits_yield_per_epoch r552.microcredits_yield_per_epoch into r566;
    ternary r454 r43.commission r552.commission into r567;
    ternary r454 r43.boost r552.boost into r568;
    cast r562 r563 r564 r565 r566 r567 r568 into r569 as validator_datum;
    ternary r454 true r553 into r570;
    ternary r453 r43.delegator r561.delegator into r571;
    ternary r453 r43.validator r561.validator into r572;
    ternary r453 r43.block_height r561.block_height into r573;
    ternary r453 r43.bonded_microcredits r561.bonded_microcredits into r574;
    ternary r453 r43.microcredits_yield_per_epoch r561.microcredits_yield_per_epoch into r575;
    ternary r453 r43.commission r561.commission into r576;
    ternary r453 r43.boost r561.boost into r577;
    cast r571 r572 r573 r574 r575 r576 r577 into r578 as validator_datum;
    ternary r453 r452.delegator r569.delegator into r579;
    ternary r453 r452.validator r569.validator into r580;
    ternary r453 r452.block_height r569.block_height into r581;
    ternary r453 r452.bonded_microcredits r569.bonded_microcredits into r582;
    ternary r453 r452.microcredits_yield_per_epoch r569.microcredits_yield_per_epoch into r583;
    ternary r453 r452.commission r569.commission into r584;
    ternary r453 r452.boost r569.boost into r585;
    cast r579 r580 r581 r582 r583 r584 r585 into r586 as validator_datum;
    ternary r453 true r570 into r587;
    is.eq r586.delegator r44.delegator into r588;
    is.eq r586.validator r44.validator into r589;
    lt r44.block_height r50 into r590;
    lt r586.block_height r50 into r591;
    is.eq r44.microcredits_yield_per_epoch 0u128 into r592;
    is.eq r586.microcredits_yield_per_epoch 0u128 into r593;
    mul r586.boost 1_000u128 into r594;
    div r594 r51[4u32] into r595;
    add r586.microcredits_yield_per_epoch r595 into r596;
    mul r44.boost 1_000u128 into r597;
    div r597 r51[4u32] into r598;
    add r44.microcredits_yield_per_epoch r598 into r599;
    gt r596 r599 into r600;
    lt r596 r599 into r601;
    ternary r589 r600 r601 into r602;
    ternary r602 r44.delegator r586.delegator into r603;
    ternary r602 r44.validator r586.validator into r604;
    ternary r602 r44.block_height r586.block_height into r605;
    ternary r602 r44.bonded_microcredits r586.bonded_microcredits into r606;
    ternary r602 r44.microcredits_yield_per_epoch r586.microcredits_yield_per_epoch into r607;
    ternary r602 r44.commission r586.commission into r608;
    ternary r602 r44.boost r586.boost into r609;
    cast r603 r604 r605 r606 r607 r608 r609 into r610 as validator_datum;
    ternary r602 r586.delegator r44.delegator into r611;
    ternary r602 r586.validator r44.validator into r612;
    ternary r602 r586.block_height r44.block_height into r613;
    ternary r602 r586.bonded_microcredits r44.bonded_microcredits into r614;
    ternary r602 r586.microcredits_yield_per_epoch r44.microcredits_yield_per_epoch into r615;
    ternary r602 r586.commission r44.commission into r616;
    ternary r602 r586.boost r44.boost into r617;
    cast r611 r612 r613 r614 r615 r616 r617 into r618 as validator_datum;
    ternary r602 r589 r589 into r619;
    ternary r593 r44.delegator r610.delegator into r620;
    ternary r593 r44.validator r610.validator into r621;
    ternary r593 r44.block_height r610.block_height into r622;
    ternary r593 r44.bonded_microcredits r610.bonded_microcredits into r623;
    ternary r593 r44.microcredits_yield_per_epoch r610.microcredits_yield_per_epoch into r624;
    ternary r593 r44.commission r610.commission into r625;
    ternary r593 r44.boost r610.boost into r626;
    cast r620 r621 r622 r623 r624 r625 r626 into r627 as validator_datum;
    ternary r593 r586.delegator r618.delegator into r628;
    ternary r593 r586.validator r618.validator into r629;
    ternary r593 r586.block_height r618.block_height into r630;
    ternary r593 r586.bonded_microcredits r618.bonded_microcredits into r631;
    ternary r593 r586.microcredits_yield_per_epoch r618.microcredits_yield_per_epoch into r632;
    ternary r593 r586.commission r618.commission into r633;
    ternary r593 r586.boost r618.boost into r634;
    cast r628 r629 r630 r631 r632 r633 r634 into r635 as validator_datum;
    ternary r593 r589 r619 into r636;
    ternary r592 r586.delegator r627.delegator into r637;
    ternary r592 r586.validator r627.validator into r638;
    ternary r592 r586.block_height r627.block_height into r639;
    ternary r592 r586.bonded_microcredits r627.bonded_microcredits into r640;
    ternary r592 r586.microcredits_yield_per_epoch r627.microcredits_yield_per_epoch into r641;
    ternary r592 r586.commission r627.commission into r642;
    ternary r592 r586.boost r627.boost into r643;
    cast r637 r638 r639 r640 r641 r642 r643 into r644 as validator_datum;
    ternary r592 r44.delegator r635.delegator into r645;
    ternary r592 r44.validator r635.validator into r646;
    ternary r592 r44.block_height r635.block_height into r647;
    ternary r592 r44.bonded_microcredits r635.bonded_microcredits into r648;
    ternary r592 r44.microcredits_yield_per_epoch r635.microcredits_yield_per_epoch into r649;
    ternary r592 r44.commission r635.commission into r650;
    ternary r592 r44.boost r635.boost into r651;
    cast r645 r646 r647 r648 r649 r650 r651 into r652 as validator_datum;
    ternary r592 r589 r636 into r653;
    ternary r591 r44.delegator r644.delegator into r654;
    ternary r591 r44.validator r644.validator into r655;
    ternary r591 r44.block_height r644.block_height into r656;
    ternary r591 r44.bonded_microcredits r644.bonded_microcredits into r657;
    ternary r591 r44.microcredits_yield_per_epoch r644.microcredits_yield_per_epoch into r658;
    ternary r591 r44.commission r644.commission into r659;
    ternary r591 r44.boost r644.boost into r660;
    cast r654 r655 r656 r657 r658 r659 r660 into r661 as validator_datum;
    ternary r591 r586.delegator r652.delegator into r662;
    ternary r591 r586.validator r652.validator into r663;
    ternary r591 r586.block_height r652.block_height into r664;
    ternary r591 r586.bonded_microcredits r652.bonded_microcredits into r665;
    ternary r591 r586.microcredits_yield_per_epoch r652.microcredits_yield_per_epoch into r666;
    ternary r591 r586.commission r652.commission into r667;
    ternary r591 r586.boost r652.boost into r668;
    cast r662 r663 r664 r665 r666 r667 r668 into r669 as validator_datum;
    ternary r591 r589 r653 into r670;
    ternary r590 r586.delegator r661.delegator into r671;
    ternary r590 r586.validator r661.validator into r672;
    ternary r590 r586.block_height r661.block_height into r673;
    ternary r590 r586.bonded_microcredits r661.bonded_microcredits into r674;
    ternary r590 r586.microcredits_yield_per_epoch r661.microcredits_yield_per_epoch into r675;
    ternary r590 r586.commission r661.commission into r676;
    ternary r590 r586.boost r661.boost into r677;
    cast r671 r672 r673 r674 r675 r676 r677 into r678 as validator_datum;
    ternary r590 r44.delegator r669.delegator into r679;
    ternary r590 r44.validator r669.validator into r680;
    ternary r590 r44.block_height r669.block_height into r681;
    ternary r590 r44.bonded_microcredits r669.bonded_microcredits into r682;
    ternary r590 r44.microcredits_yield_per_epoch r669.microcredits_yield_per_epoch into r683;
    ternary r590 r44.commission r669.commission into r684;
    ternary r590 r44.boost r669.boost into r685;
    cast r679 r680 r681 r682 r683 r684 r685 into r686 as validator_datum;
    ternary r590 r589 r670 into r687;
    ternary r588 r586.delegator r678.delegator into r688;
    ternary r588 r586.validator r678.validator into r689;
    ternary r588 r586.block_height r678.block_height into r690;
    ternary r588 r586.bonded_microcredits r678.bonded_microcredits into r691;
    ternary r588 r586.microcredits_yield_per_epoch r678.microcredits_yield_per_epoch into r692;
    ternary r588 r586.commission r678.commission into r693;
    ternary r588 r586.boost r678.boost into r694;
    cast r688 r689 r690 r691 r692 r693 r694 into r695 as validator_datum;
    ternary r588 r44.delegator r686.delegator into r696;
    ternary r588 r44.validator r686.validator into r697;
    ternary r588 r44.block_height r686.block_height into r698;
    ternary r588 r44.bonded_microcredits r686.bonded_microcredits into r699;
    ternary r588 r44.microcredits_yield_per_epoch r686.microcredits_yield_per_epoch into r700;
    ternary r588 r44.commission r686.commission into r701;
    ternary r588 r44.boost r686.boost into r702;
    cast r696 r697 r698 r699 r700 r701 r702 into r703 as validator_datum;
    ternary r588 true r687 into r704;
    ternary r587 r44.delegator r695.delegator into r705;
    ternary r587 r44.validator r695.validator into r706;
    ternary r587 r44.block_height r695.block_height into r707;
    ternary r587 r44.bonded_microcredits r695.bonded_microcredits into r708;
    ternary r587 r44.microcredits_yield_per_epoch r695.microcredits_yield_per_epoch into r709;
    ternary r587 r44.commission r695.commission into r710;
    ternary r587 r44.boost r695.boost into r711;
    cast r705 r706 r707 r708 r709 r710 r711 into r712 as validator_datum;
    ternary r587 r586.delegator r703.delegator into r713;
    ternary r587 r586.validator r703.validator into r714;
    ternary r587 r586.block_height r703.block_height into r715;
    ternary r587 r586.bonded_microcredits r703.bonded_microcredits into r716;
    ternary r587 r586.microcredits_yield_per_epoch r703.microcredits_yield_per_epoch into r717;
    ternary r587 r586.commission r703.commission into r718;
    ternary r587 r586.boost r703.boost into r719;
    cast r713 r714 r715 r716 r717 r718 r719 into r720 as validator_datum;
    ternary r587 true r704 into r721;
    is.eq r720.delegator r45.delegator into r722;
    is.eq r720.validator r45.validator into r723;
    lt r45.block_height r50 into r724;
    lt r720.block_height r50 into r725;
    is.eq r45.microcredits_yield_per_epoch 0u128 into r726;
    is.eq r720.microcredits_yield_per_epoch 0u128 into r727;
    mul r720.boost 1_000u128 into r728;
    div r728 r51[5u32] into r729;
    add r720.microcredits_yield_per_epoch r729 into r730;
    mul r45.boost 1_000u128 into r731;
    div r731 r51[5u32] into r732;
    add r45.microcredits_yield_per_epoch r732 into r733;
    gt r730 r733 into r734;
    lt r730 r733 into r735;
    ternary r723 r734 r735 into r736;
    ternary r736 r45.delegator r720.delegator into r737;
    ternary r736 r45.validator r720.validator into r738;
    ternary r736 r45.block_height r720.block_height into r739;
    ternary r736 r45.bonded_microcredits r720.bonded_microcredits into r740;
    ternary r736 r45.microcredits_yield_per_epoch r720.microcredits_yield_per_epoch into r741;
    ternary r736 r45.commission r720.commission into r742;
    ternary r736 r45.boost r720.boost into r743;
    cast r737 r738 r739 r740 r741 r742 r743 into r744 as validator_datum;
    ternary r736 r720.delegator r45.delegator into r745;
    ternary r736 r720.validator r45.validator into r746;
    ternary r736 r720.block_height r45.block_height into r747;
    ternary r736 r720.bonded_microcredits r45.bonded_microcredits into r748;
    ternary r736 r720.microcredits_yield_per_epoch r45.microcredits_yield_per_epoch into r749;
    ternary r736 r720.commission r45.commission into r750;
    ternary r736 r720.boost r45.boost into r751;
    cast r745 r746 r747 r748 r749 r750 r751 into r752 as validator_datum;
    ternary r736 r723 r723 into r753;
    ternary r727 r45.delegator r744.delegator into r754;
    ternary r727 r45.validator r744.validator into r755;
    ternary r727 r45.block_height r744.block_height into r756;
    ternary r727 r45.bonded_microcredits r744.bonded_microcredits into r757;
    ternary r727 r45.microcredits_yield_per_epoch r744.microcredits_yield_per_epoch into r758;
    ternary r727 r45.commission r744.commission into r759;
    ternary r727 r45.boost r744.boost into r760;
    cast r754 r755 r756 r757 r758 r759 r760 into r761 as validator_datum;
    ternary r727 r720.delegator r752.delegator into r762;
    ternary r727 r720.validator r752.validator into r763;
    ternary r727 r720.block_height r752.block_height into r764;
    ternary r727 r720.bonded_microcredits r752.bonded_microcredits into r765;
    ternary r727 r720.microcredits_yield_per_epoch r752.microcredits_yield_per_epoch into r766;
    ternary r727 r720.commission r752.commission into r767;
    ternary r727 r720.boost r752.boost into r768;
    cast r762 r763 r764 r765 r766 r767 r768 into r769 as validator_datum;
    ternary r727 r723 r753 into r770;
    ternary r726 r720.delegator r761.delegator into r771;
    ternary r726 r720.validator r761.validator into r772;
    ternary r726 r720.block_height r761.block_height into r773;
    ternary r726 r720.bonded_microcredits r761.bonded_microcredits into r774;
    ternary r726 r720.microcredits_yield_per_epoch r761.microcredits_yield_per_epoch into r775;
    ternary r726 r720.commission r761.commission into r776;
    ternary r726 r720.boost r761.boost into r777;
    cast r771 r772 r773 r774 r775 r776 r777 into r778 as validator_datum;
    ternary r726 r45.delegator r769.delegator into r779;
    ternary r726 r45.validator r769.validator into r780;
    ternary r726 r45.block_height r769.block_height into r781;
    ternary r726 r45.bonded_microcredits r769.bonded_microcredits into r782;
    ternary r726 r45.microcredits_yield_per_epoch r769.microcredits_yield_per_epoch into r783;
    ternary r726 r45.commission r769.commission into r784;
    ternary r726 r45.boost r769.boost into r785;
    cast r779 r780 r781 r782 r783 r784 r785 into r786 as validator_datum;
    ternary r726 r723 r770 into r787;
    ternary r725 r45.delegator r778.delegator into r788;
    ternary r725 r45.validator r778.validator into r789;
    ternary r725 r45.block_height r778.block_height into r790;
    ternary r725 r45.bonded_microcredits r778.bonded_microcredits into r791;
    ternary r725 r45.microcredits_yield_per_epoch r778.microcredits_yield_per_epoch into r792;
    ternary r725 r45.commission r778.commission into r793;
    ternary r725 r45.boost r778.boost into r794;
    cast r788 r789 r790 r791 r792 r793 r794 into r795 as validator_datum;
    ternary r725 r720.delegator r786.delegator into r796;
    ternary r725 r720.validator r786.validator into r797;
    ternary r725 r720.block_height r786.block_height into r798;
    ternary r725 r720.bonded_microcredits r786.bonded_microcredits into r799;
    ternary r725 r720.microcredits_yield_per_epoch r786.microcredits_yield_per_epoch into r800;
    ternary r725 r720.commission r786.commission into r801;
    ternary r725 r720.boost r786.boost into r802;
    cast r796 r797 r798 r799 r800 r801 r802 into r803 as validator_datum;
    ternary r725 r723 r787 into r804;
    ternary r724 r720.delegator r795.delegator into r805;
    ternary r724 r720.validator r795.validator into r806;
    ternary r724 r720.block_height r795.block_height into r807;
    ternary r724 r720.bonded_microcredits r795.bonded_microcredits into r808;
    ternary r724 r720.microcredits_yield_per_epoch r795.microcredits_yield_per_epoch into r809;
    ternary r724 r720.commission r795.commission into r810;
    ternary r724 r720.boost r795.boost into r811;
    cast r805 r806 r807 r808 r809 r810 r811 into r812 as validator_datum;
    ternary r724 r45.delegator r803.delegator into r813;
    ternary r724 r45.validator r803.validator into r814;
    ternary r724 r45.block_height r803.block_height into r815;
    ternary r724 r45.bonded_microcredits r803.bonded_microcredits into r816;
    ternary r724 r45.microcredits_yield_per_epoch r803.microcredits_yield_per_epoch into r817;
    ternary r724 r45.commission r803.commission into r818;
    ternary r724 r45.boost r803.boost into r819;
    cast r813 r814 r815 r816 r817 r818 r819 into r820 as validator_datum;
    ternary r724 r723 r804 into r821;
    ternary r722 r720.delegator r812.delegator into r822;
    ternary r722 r720.validator r812.validator into r823;
    ternary r722 r720.block_height r812.block_height into r824;
    ternary r722 r720.bonded_microcredits r812.bonded_microcredits into r825;
    ternary r722 r720.microcredits_yield_per_epoch r812.microcredits_yield_per_epoch into r826;
    ternary r722 r720.commission r812.commission into r827;
    ternary r722 r720.boost r812.boost into r828;
    cast r822 r823 r824 r825 r826 r827 r828 into r829 as validator_datum;
    ternary r722 r45.delegator r820.delegator into r830;
    ternary r722 r45.validator r820.validator into r831;
    ternary r722 r45.block_height r820.block_height into r832;
    ternary r722 r45.bonded_microcredits r820.bonded_microcredits into r833;
    ternary r722 r45.microcredits_yield_per_epoch r820.microcredits_yield_per_epoch into r834;
    ternary r722 r45.commission r820.commission into r835;
    ternary r722 r45.boost r820.boost into r836;
    cast r830 r831 r832 r833 r834 r835 r836 into r837 as validator_datum;
    ternary r722 true r821 into r838;
    ternary r721 r45.delegator r829.delegator into r839;
    ternary r721 r45.validator r829.validator into r840;
    ternary r721 r45.block_height r829.block_height into r841;
    ternary r721 r45.bonded_microcredits r829.bonded_microcredits into r842;
    ternary r721 r45.microcredits_yield_per_epoch r829.microcredits_yield_per_epoch into r843;
    ternary r721 r45.commission r829.commission into r844;
    ternary r721 r45.boost r829.boost into r845;
    cast r839 r840 r841 r842 r843 r844 r845 into r846 as validator_datum;
    ternary r721 r720.delegator r837.delegator into r847;
    ternary r721 r720.validator r837.validator into r848;
    ternary r721 r720.block_height r837.block_height into r849;
    ternary r721 r720.bonded_microcredits r837.bonded_microcredits into r850;
    ternary r721 r720.microcredits_yield_per_epoch r837.microcredits_yield_per_epoch into r851;
    ternary r721 r720.commission r837.commission into r852;
    ternary r721 r720.boost r837.boost into r853;
    cast r847 r848 r849 r850 r851 r852 r853 into r854 as validator_datum;
    ternary r721 true r838 into r855;
    is.eq r854.delegator r46.delegator into r856;
    is.eq r854.validator r46.validator into r857;
    lt r46.block_height r50 into r858;
    lt r854.block_height r50 into r859;
    is.eq r46.microcredits_yield_per_epoch 0u128 into r860;
    is.eq r854.microcredits_yield_per_epoch 0u128 into r861;
    mul r854.boost 1_000u128 into r862;
    div r862 r51[6u32] into r863;
    add r854.microcredits_yield_per_epoch r863 into r864;
    mul r46.boost 1_000u128 into r865;
    div r865 r51[6u32] into r866;
    add r46.microcredits_yield_per_epoch r866 into r867;
    gt r864 r867 into r868;
    lt r864 r867 into r869;
    ternary r857 r868 r869 into r870;
    ternary r870 r46.delegator r854.delegator into r871;
    ternary r870 r46.validator r854.validator into r872;
    ternary r870 r46.block_height r854.block_height into r873;
    ternary r870 r46.bonded_microcredits r854.bonded_microcredits into r874;
    ternary r870 r46.microcredits_yield_per_epoch r854.microcredits_yield_per_epoch into r875;
    ternary r870 r46.commission r854.commission into r876;
    ternary r870 r46.boost r854.boost into r877;
    cast r871 r872 r873 r874 r875 r876 r877 into r878 as validator_datum;
    ternary r870 r854.delegator r46.delegator into r879;
    ternary r870 r854.validator r46.validator into r880;
    ternary r870 r854.block_height r46.block_height into r881;
    ternary r870 r854.bonded_microcredits r46.bonded_microcredits into r882;
    ternary r870 r854.microcredits_yield_per_epoch r46.microcredits_yield_per_epoch into r883;
    ternary r870 r854.commission r46.commission into r884;
    ternary r870 r854.boost r46.boost into r885;
    cast r879 r880 r881 r882 r883 r884 r885 into r886 as validator_datum;
    ternary r870 r857 r857 into r887;
    ternary r861 r46.delegator r878.delegator into r888;
    ternary r861 r46.validator r878.validator into r889;
    ternary r861 r46.block_height r878.block_height into r890;
    ternary r861 r46.bonded_microcredits r878.bonded_microcredits into r891;
    ternary r861 r46.microcredits_yield_per_epoch r878.microcredits_yield_per_epoch into r892;
    ternary r861 r46.commission r878.commission into r893;
    ternary r861 r46.boost r878.boost into r894;
    cast r888 r889 r890 r891 r892 r893 r894 into r895 as validator_datum;
    ternary r861 r854.delegator r886.delegator into r896;
    ternary r861 r854.validator r886.validator into r897;
    ternary r861 r854.block_height r886.block_height into r898;
    ternary r861 r854.bonded_microcredits r886.bonded_microcredits into r899;
    ternary r861 r854.microcredits_yield_per_epoch r886.microcredits_yield_per_epoch into r900;
    ternary r861 r854.commission r886.commission into r901;
    ternary r861 r854.boost r886.boost into r902;
    cast r896 r897 r898 r899 r900 r901 r902 into r903 as validator_datum;
    ternary r861 r857 r887 into r904;
    ternary r860 r854.delegator r895.delegator into r905;
    ternary r860 r854.validator r895.validator into r906;
    ternary r860 r854.block_height r895.block_height into r907;
    ternary r860 r854.bonded_microcredits r895.bonded_microcredits into r908;
    ternary r860 r854.microcredits_yield_per_epoch r895.microcredits_yield_per_epoch into r909;
    ternary r860 r854.commission r895.commission into r910;
    ternary r860 r854.boost r895.boost into r911;
    cast r905 r906 r907 r908 r909 r910 r911 into r912 as validator_datum;
    ternary r860 r46.delegator r903.delegator into r913;
    ternary r860 r46.validator r903.validator into r914;
    ternary r860 r46.block_height r903.block_height into r915;
    ternary r860 r46.bonded_microcredits r903.bonded_microcredits into r916;
    ternary r860 r46.microcredits_yield_per_epoch r903.microcredits_yield_per_epoch into r917;
    ternary r860 r46.commission r903.commission into r918;
    ternary r860 r46.boost r903.boost into r919;
    cast r913 r914 r915 r916 r917 r918 r919 into r920 as validator_datum;
    ternary r860 r857 r904 into r921;
    ternary r859 r46.delegator r912.delegator into r922;
    ternary r859 r46.validator r912.validator into r923;
    ternary r859 r46.block_height r912.block_height into r924;
    ternary r859 r46.bonded_microcredits r912.bonded_microcredits into r925;
    ternary r859 r46.microcredits_yield_per_epoch r912.microcredits_yield_per_epoch into r926;
    ternary r859 r46.commission r912.commission into r927;
    ternary r859 r46.boost r912.boost into r928;
    cast r922 r923 r924 r925 r926 r927 r928 into r929 as validator_datum;
    ternary r859 r854.delegator r920.delegator into r930;
    ternary r859 r854.validator r920.validator into r931;
    ternary r859 r854.block_height r920.block_height into r932;
    ternary r859 r854.bonded_microcredits r920.bonded_microcredits into r933;
    ternary r859 r854.microcredits_yield_per_epoch r920.microcredits_yield_per_epoch into r934;
    ternary r859 r854.commission r920.commission into r935;
    ternary r859 r854.boost r920.boost into r936;
    cast r930 r931 r932 r933 r934 r935 r936 into r937 as validator_datum;
    ternary r859 r857 r921 into r938;
    ternary r858 r854.delegator r929.delegator into r939;
    ternary r858 r854.validator r929.validator into r940;
    ternary r858 r854.block_height r929.block_height into r941;
    ternary r858 r854.bonded_microcredits r929.bonded_microcredits into r942;
    ternary r858 r854.microcredits_yield_per_epoch r929.microcredits_yield_per_epoch into r943;
    ternary r858 r854.commission r929.commission into r944;
    ternary r858 r854.boost r929.boost into r945;
    cast r939 r940 r941 r942 r943 r944 r945 into r946 as validator_datum;
    ternary r858 r46.delegator r937.delegator into r947;
    ternary r858 r46.validator r937.validator into r948;
    ternary r858 r46.block_height r937.block_height into r949;
    ternary r858 r46.bonded_microcredits r937.bonded_microcredits into r950;
    ternary r858 r46.microcredits_yield_per_epoch r937.microcredits_yield_per_epoch into r951;
    ternary r858 r46.commission r937.commission into r952;
    ternary r858 r46.boost r937.boost into r953;
    cast r947 r948 r949 r950 r951 r952 r953 into r954 as validator_datum;
    ternary r858 r857 r938 into r955;
    ternary r856 r854.delegator r946.delegator into r956;
    ternary r856 r854.validator r946.validator into r957;
    ternary r856 r854.block_height r946.block_height into r958;
    ternary r856 r854.bonded_microcredits r946.bonded_microcredits into r959;
    ternary r856 r854.microcredits_yield_per_epoch r946.microcredits_yield_per_epoch into r960;
    ternary r856 r854.commission r946.commission into r961;
    ternary r856 r854.boost r946.boost into r962;
    cast r956 r957 r958 r959 r960 r961 r962 into r963 as validator_datum;
    ternary r856 r46.delegator r954.delegator into r964;
    ternary r856 r46.validator r954.validator into r965;
    ternary r856 r46.block_height r954.block_height into r966;
    ternary r856 r46.bonded_microcredits r954.bonded_microcredits into r967;
    ternary r856 r46.microcredits_yield_per_epoch r954.microcredits_yield_per_epoch into r968;
    ternary r856 r46.commission r954.commission into r969;
    ternary r856 r46.boost r954.boost into r970;
    cast r964 r965 r966 r967 r968 r969 r970 into r971 as validator_datum;
    ternary r856 true r955 into r972;
    ternary r855 r46.delegator r963.delegator into r973;
    ternary r855 r46.validator r963.validator into r974;
    ternary r855 r46.block_height r963.block_height into r975;
    ternary r855 r46.bonded_microcredits r963.bonded_microcredits into r976;
    ternary r855 r46.microcredits_yield_per_epoch r963.microcredits_yield_per_epoch into r977;
    ternary r855 r46.commission r963.commission into r978;
    ternary r855 r46.boost r963.boost into r979;
    cast r973 r974 r975 r976 r977 r978 r979 into r980 as validator_datum;
    ternary r855 r854.delegator r971.delegator into r981;
    ternary r855 r854.validator r971.validator into r982;
    ternary r855 r854.block_height r971.block_height into r983;
    ternary r855 r854.bonded_microcredits r971.bonded_microcredits into r984;
    ternary r855 r854.microcredits_yield_per_epoch r971.microcredits_yield_per_epoch into r985;
    ternary r855 r854.commission r971.commission into r986;
    ternary r855 r854.boost r971.boost into r987;
    cast r981 r982 r983 r984 r985 r986 r987 into r988 as validator_datum;
    ternary r855 true r972 into r989;
    is.eq r988.delegator r47.delegator into r990;
    is.eq r988.validator r47.validator into r991;
    lt r47.block_height r50 into r992;
    lt r988.block_height r50 into r993;
    is.eq r47.microcredits_yield_per_epoch 0u128 into r994;
    is.eq r988.microcredits_yield_per_epoch 0u128 into r995;
    mul r988.boost 1_000u128 into r996;
    div r996 r51[7u32] into r997;
    add r988.microcredits_yield_per_epoch r997 into r998;
    mul r47.boost 1_000u128 into r999;
    div r999 r51[7u32] into r1000;
    add r47.microcredits_yield_per_epoch r1000 into r1001;
    gt r998 r1001 into r1002;
    lt r998 r1001 into r1003;
    ternary r991 r1002 r1003 into r1004;
    ternary r1004 r47.delegator r988.delegator into r1005;
    ternary r1004 r47.validator r988.validator into r1006;
    ternary r1004 r47.block_height r988.block_height into r1007;
    ternary r1004 r47.bonded_microcredits r988.bonded_microcredits into r1008;
    ternary r1004 r47.microcredits_yield_per_epoch r988.microcredits_yield_per_epoch into r1009;
    ternary r1004 r47.commission r988.commission into r1010;
    ternary r1004 r47.boost r988.boost into r1011;
    cast r1005 r1006 r1007 r1008 r1009 r1010 r1011 into r1012 as validator_datum;
    ternary r1004 r988.delegator r47.delegator into r1013;
    ternary r1004 r988.validator r47.validator into r1014;
    ternary r1004 r988.block_height r47.block_height into r1015;
    ternary r1004 r988.bonded_microcredits r47.bonded_microcredits into r1016;
    ternary r1004 r988.microcredits_yield_per_epoch r47.microcredits_yield_per_epoch into r1017;
    ternary r1004 r988.commission r47.commission into r1018;
    ternary r1004 r988.boost r47.boost into r1019;
    cast r1013 r1014 r1015 r1016 r1017 r1018 r1019 into r1020 as validator_datum;
    ternary r1004 r991 r991 into r1021;
    ternary r995 r47.delegator r1012.delegator into r1022;
    ternary r995 r47.validator r1012.validator into r1023;
    ternary r995 r47.block_height r1012.block_height into r1024;
    ternary r995 r47.bonded_microcredits r1012.bonded_microcredits into r1025;
    ternary r995 r47.microcredits_yield_per_epoch r1012.microcredits_yield_per_epoch into r1026;
    ternary r995 r47.commission r1012.commission into r1027;
    ternary r995 r47.boost r1012.boost into r1028;
    cast r1022 r1023 r1024 r1025 r1026 r1027 r1028 into r1029 as validator_datum;
    ternary r995 r988.delegator r1020.delegator into r1030;
    ternary r995 r988.validator r1020.validator into r1031;
    ternary r995 r988.block_height r1020.block_height into r1032;
    ternary r995 r988.bonded_microcredits r1020.bonded_microcredits into r1033;
    ternary r995 r988.microcredits_yield_per_epoch r1020.microcredits_yield_per_epoch into r1034;
    ternary r995 r988.commission r1020.commission into r1035;
    ternary r995 r988.boost r1020.boost into r1036;
    cast r1030 r1031 r1032 r1033 r1034 r1035 r1036 into r1037 as validator_datum;
    ternary r995 r991 r1021 into r1038;
    ternary r994 r988.delegator r1029.delegator into r1039;
    ternary r994 r988.validator r1029.validator into r1040;
    ternary r994 r988.block_height r1029.block_height into r1041;
    ternary r994 r988.bonded_microcredits r1029.bonded_microcredits into r1042;
    ternary r994 r988.microcredits_yield_per_epoch r1029.microcredits_yield_per_epoch into r1043;
    ternary r994 r988.commission r1029.commission into r1044;
    ternary r994 r988.boost r1029.boost into r1045;
    cast r1039 r1040 r1041 r1042 r1043 r1044 r1045 into r1046 as validator_datum;
    ternary r994 r47.delegator r1037.delegator into r1047;
    ternary r994 r47.validator r1037.validator into r1048;
    ternary r994 r47.block_height r1037.block_height into r1049;
    ternary r994 r47.bonded_microcredits r1037.bonded_microcredits into r1050;
    ternary r994 r47.microcredits_yield_per_epoch r1037.microcredits_yield_per_epoch into r1051;
    ternary r994 r47.commission r1037.commission into r1052;
    ternary r994 r47.boost r1037.boost into r1053;
    cast r1047 r1048 r1049 r1050 r1051 r1052 r1053 into r1054 as validator_datum;
    ternary r994 r991 r1038 into r1055;
    ternary r993 r47.delegator r1046.delegator into r1056;
    ternary r993 r47.validator r1046.validator into r1057;
    ternary r993 r47.block_height r1046.block_height into r1058;
    ternary r993 r47.bonded_microcredits r1046.bonded_microcredits into r1059;
    ternary r993 r47.microcredits_yield_per_epoch r1046.microcredits_yield_per_epoch into r1060;
    ternary r993 r47.commission r1046.commission into r1061;
    ternary r993 r47.boost r1046.boost into r1062;
    cast r1056 r1057 r1058 r1059 r1060 r1061 r1062 into r1063 as validator_datum;
    ternary r993 r988.delegator r1054.delegator into r1064;
    ternary r993 r988.validator r1054.validator into r1065;
    ternary r993 r988.block_height r1054.block_height into r1066;
    ternary r993 r988.bonded_microcredits r1054.bonded_microcredits into r1067;
    ternary r993 r988.microcredits_yield_per_epoch r1054.microcredits_yield_per_epoch into r1068;
    ternary r993 r988.commission r1054.commission into r1069;
    ternary r993 r988.boost r1054.boost into r1070;
    cast r1064 r1065 r1066 r1067 r1068 r1069 r1070 into r1071 as validator_datum;
    ternary r993 r991 r1055 into r1072;
    ternary r992 r988.delegator r1063.delegator into r1073;
    ternary r992 r988.validator r1063.validator into r1074;
    ternary r992 r988.block_height r1063.block_height into r1075;
    ternary r992 r988.bonded_microcredits r1063.bonded_microcredits into r1076;
    ternary r992 r988.microcredits_yield_per_epoch r1063.microcredits_yield_per_epoch into r1077;
    ternary r992 r988.commission r1063.commission into r1078;
    ternary r992 r988.boost r1063.boost into r1079;
    cast r1073 r1074 r1075 r1076 r1077 r1078 r1079 into r1080 as validator_datum;
    ternary r992 r47.delegator r1071.delegator into r1081;
    ternary r992 r47.validator r1071.validator into r1082;
    ternary r992 r47.block_height r1071.block_height into r1083;
    ternary r992 r47.bonded_microcredits r1071.bonded_microcredits into r1084;
    ternary r992 r47.microcredits_yield_per_epoch r1071.microcredits_yield_per_epoch into r1085;
    ternary r992 r47.commission r1071.commission into r1086;
    ternary r992 r47.boost r1071.boost into r1087;
    cast r1081 r1082 r1083 r1084 r1085 r1086 r1087 into r1088 as validator_datum;
    ternary r992 r991 r1072 into r1089;
    ternary r990 r988.delegator r1080.delegator into r1090;
    ternary r990 r988.validator r1080.validator into r1091;
    ternary r990 r988.block_height r1080.block_height into r1092;
    ternary r990 r988.bonded_microcredits r1080.bonded_microcredits into r1093;
    ternary r990 r988.microcredits_yield_per_epoch r1080.microcredits_yield_per_epoch into r1094;
    ternary r990 r988.commission r1080.commission into r1095;
    ternary r990 r988.boost r1080.boost into r1096;
    cast r1090 r1091 r1092 r1093 r1094 r1095 r1096 into r1097 as validator_datum;
    ternary r990 r47.delegator r1088.delegator into r1098;
    ternary r990 r47.validator r1088.validator into r1099;
    ternary r990 r47.block_height r1088.block_height into r1100;
    ternary r990 r47.bonded_microcredits r1088.bonded_microcredits into r1101;
    ternary r990 r47.microcredits_yield_per_epoch r1088.microcredits_yield_per_epoch into r1102;
    ternary r990 r47.commission r1088.commission into r1103;
    ternary r990 r47.boost r1088.boost into r1104;
    cast r1098 r1099 r1100 r1101 r1102 r1103 r1104 into r1105 as validator_datum;
    ternary r990 true r1089 into r1106;
    ternary r989 r47.delegator r1097.delegator into r1107;
    ternary r989 r47.validator r1097.validator into r1108;
    ternary r989 r47.block_height r1097.block_height into r1109;
    ternary r989 r47.bonded_microcredits r1097.bonded_microcredits into r1110;
    ternary r989 r47.microcredits_yield_per_epoch r1097.microcredits_yield_per_epoch into r1111;
    ternary r989 r47.commission r1097.commission into r1112;
    ternary r989 r47.boost r1097.boost into r1113;
    cast r1107 r1108 r1109 r1110 r1111 r1112 r1113 into r1114 as validator_datum;
    ternary r989 r988.delegator r1105.delegator into r1115;
    ternary r989 r988.validator r1105.validator into r1116;
    ternary r989 r988.block_height r1105.block_height into r1117;
    ternary r989 r988.bonded_microcredits r1105.bonded_microcredits into r1118;
    ternary r989 r988.microcredits_yield_per_epoch r1105.microcredits_yield_per_epoch into r1119;
    ternary r989 r988.commission r1105.commission into r1120;
    ternary r989 r988.boost r1105.boost into r1121;
    cast r1115 r1116 r1117 r1118 r1119 r1120 r1121 into r1122 as validator_datum;
    ternary r989 true r1106 into r1123;
    is.eq r1122.delegator r48.delegator into r1124;
    is.eq r1122.validator r48.validator into r1125;
    lt r48.block_height r50 into r1126;
    lt r1122.block_height r50 into r1127;
    is.eq r48.microcredits_yield_per_epoch 0u128 into r1128;
    is.eq r1122.microcredits_yield_per_epoch 0u128 into r1129;
    mul r1122.boost 1_000u128 into r1130;
    div r1130 r51[8u32] into r1131;
    add r1122.microcredits_yield_per_epoch r1131 into r1132;
    mul r48.boost 1_000u128 into r1133;
    div r1133 r51[8u32] into r1134;
    add r48.microcredits_yield_per_epoch r1134 into r1135;
    gt r1132 r1135 into r1136;
    lt r1132 r1135 into r1137;
    ternary r1125 r1136 r1137 into r1138;
    ternary r1138 r48.delegator r1122.delegator into r1139;
    ternary r1138 r48.validator r1122.validator into r1140;
    ternary r1138 r48.block_height r1122.block_height into r1141;
    ternary r1138 r48.bonded_microcredits r1122.bonded_microcredits into r1142;
    ternary r1138 r48.microcredits_yield_per_epoch r1122.microcredits_yield_per_epoch into r1143;
    ternary r1138 r48.commission r1122.commission into r1144;
    ternary r1138 r48.boost r1122.boost into r1145;
    cast r1139 r1140 r1141 r1142 r1143 r1144 r1145 into r1146 as validator_datum;
    ternary r1138 r1122.delegator r48.delegator into r1147;
    ternary r1138 r1122.validator r48.validator into r1148;
    ternary r1138 r1122.block_height r48.block_height into r1149;
    ternary r1138 r1122.bonded_microcredits r48.bonded_microcredits into r1150;
    ternary r1138 r1122.microcredits_yield_per_epoch r48.microcredits_yield_per_epoch into r1151;
    ternary r1138 r1122.commission r48.commission into r1152;
    ternary r1138 r1122.boost r48.boost into r1153;
    cast r1147 r1148 r1149 r1150 r1151 r1152 r1153 into r1154 as validator_datum;
    ternary r1138 r1125 r1125 into r1155;
    ternary r1129 r48.delegator r1146.delegator into r1156;
    ternary r1129 r48.validator r1146.validator into r1157;
    ternary r1129 r48.block_height r1146.block_height into r1158;
    ternary r1129 r48.bonded_microcredits r1146.bonded_microcredits into r1159;
    ternary r1129 r48.microcredits_yield_per_epoch r1146.microcredits_yield_per_epoch into r1160;
    ternary r1129 r48.commission r1146.commission into r1161;
    ternary r1129 r48.boost r1146.boost into r1162;
    cast r1156 r1157 r1158 r1159 r1160 r1161 r1162 into r1163 as validator_datum;
    ternary r1129 r1122.delegator r1154.delegator into r1164;
    ternary r1129 r1122.validator r1154.validator into r1165;
    ternary r1129 r1122.block_height r1154.block_height into r1166;
    ternary r1129 r1122.bonded_microcredits r1154.bonded_microcredits into r1167;
    ternary r1129 r1122.microcredits_yield_per_epoch r1154.microcredits_yield_per_epoch into r1168;
    ternary r1129 r1122.commission r1154.commission into r1169;
    ternary r1129 r1122.boost r1154.boost into r1170;
    cast r1164 r1165 r1166 r1167 r1168 r1169 r1170 into r1171 as validator_datum;
    ternary r1129 r1125 r1155 into r1172;
    ternary r1128 r1122.delegator r1163.delegator into r1173;
    ternary r1128 r1122.validator r1163.validator into r1174;
    ternary r1128 r1122.block_height r1163.block_height into r1175;
    ternary r1128 r1122.bonded_microcredits r1163.bonded_microcredits into r1176;
    ternary r1128 r1122.microcredits_yield_per_epoch r1163.microcredits_yield_per_epoch into r1177;
    ternary r1128 r1122.commission r1163.commission into r1178;
    ternary r1128 r1122.boost r1163.boost into r1179;
    cast r1173 r1174 r1175 r1176 r1177 r1178 r1179 into r1180 as validator_datum;
    ternary r1128 r48.delegator r1171.delegator into r1181;
    ternary r1128 r48.validator r1171.validator into r1182;
    ternary r1128 r48.block_height r1171.block_height into r1183;
    ternary r1128 r48.bonded_microcredits r1171.bonded_microcredits into r1184;
    ternary r1128 r48.microcredits_yield_per_epoch r1171.microcredits_yield_per_epoch into r1185;
    ternary r1128 r48.commission r1171.commission into r1186;
    ternary r1128 r48.boost r1171.boost into r1187;
    cast r1181 r1182 r1183 r1184 r1185 r1186 r1187 into r1188 as validator_datum;
    ternary r1128 r1125 r1172 into r1189;
    ternary r1127 r48.delegator r1180.delegator into r1190;
    ternary r1127 r48.validator r1180.validator into r1191;
    ternary r1127 r48.block_height r1180.block_height into r1192;
    ternary r1127 r48.bonded_microcredits r1180.bonded_microcredits into r1193;
    ternary r1127 r48.microcredits_yield_per_epoch r1180.microcredits_yield_per_epoch into r1194;
    ternary r1127 r48.commission r1180.commission into r1195;
    ternary r1127 r48.boost r1180.boost into r1196;
    cast r1190 r1191 r1192 r1193 r1194 r1195 r1196 into r1197 as validator_datum;
    ternary r1127 r1122.delegator r1188.delegator into r1198;
    ternary r1127 r1122.validator r1188.validator into r1199;
    ternary r1127 r1122.block_height r1188.block_height into r1200;
    ternary r1127 r1122.bonded_microcredits r1188.bonded_microcredits into r1201;
    ternary r1127 r1122.microcredits_yield_per_epoch r1188.microcredits_yield_per_epoch into r1202;
    ternary r1127 r1122.commission r1188.commission into r1203;
    ternary r1127 r1122.boost r1188.boost into r1204;
    cast r1198 r1199 r1200 r1201 r1202 r1203 r1204 into r1205 as validator_datum;
    ternary r1127 r1125 r1189 into r1206;
    ternary r1126 r1122.delegator r1197.delegator into r1207;
    ternary r1126 r1122.validator r1197.validator into r1208;
    ternary r1126 r1122.block_height r1197.block_height into r1209;
    ternary r1126 r1122.bonded_microcredits r1197.bonded_microcredits into r1210;
    ternary r1126 r1122.microcredits_yield_per_epoch r1197.microcredits_yield_per_epoch into r1211;
    ternary r1126 r1122.commission r1197.commission into r1212;
    ternary r1126 r1122.boost r1197.boost into r1213;
    cast r1207 r1208 r1209 r1210 r1211 r1212 r1213 into r1214 as validator_datum;
    ternary r1126 r48.delegator r1205.delegator into r1215;
    ternary r1126 r48.validator r1205.validator into r1216;
    ternary r1126 r48.block_height r1205.block_height into r1217;
    ternary r1126 r48.bonded_microcredits r1205.bonded_microcredits into r1218;
    ternary r1126 r48.microcredits_yield_per_epoch r1205.microcredits_yield_per_epoch into r1219;
    ternary r1126 r48.commission r1205.commission into r1220;
    ternary r1126 r48.boost r1205.boost into r1221;
    cast r1215 r1216 r1217 r1218 r1219 r1220 r1221 into r1222 as validator_datum;
    ternary r1126 r1125 r1206 into r1223;
    ternary r1124 r1122.delegator r1214.delegator into r1224;
    ternary r1124 r1122.validator r1214.validator into r1225;
    ternary r1124 r1122.block_height r1214.block_height into r1226;
    ternary r1124 r1122.bonded_microcredits r1214.bonded_microcredits into r1227;
    ternary r1124 r1122.microcredits_yield_per_epoch r1214.microcredits_yield_per_epoch into r1228;
    ternary r1124 r1122.commission r1214.commission into r1229;
    ternary r1124 r1122.boost r1214.boost into r1230;
    cast r1224 r1225 r1226 r1227 r1228 r1229 r1230 into r1231 as validator_datum;
    ternary r1124 r48.delegator r1222.delegator into r1232;
    ternary r1124 r48.validator r1222.validator into r1233;
    ternary r1124 r48.block_height r1222.block_height into r1234;
    ternary r1124 r48.bonded_microcredits r1222.bonded_microcredits into r1235;
    ternary r1124 r48.microcredits_yield_per_epoch r1222.microcredits_yield_per_epoch into r1236;
    ternary r1124 r48.commission r1222.commission into r1237;
    ternary r1124 r48.boost r1222.boost into r1238;
    cast r1232 r1233 r1234 r1235 r1236 r1237 r1238 into r1239 as validator_datum;
    ternary r1124 true r1223 into r1240;
    ternary r1123 r48.delegator r1231.delegator into r1241;
    ternary r1123 r48.validator r1231.validator into r1242;
    ternary r1123 r48.block_height r1231.block_height into r1243;
    ternary r1123 r48.bonded_microcredits r1231.bonded_microcredits into r1244;
    ternary r1123 r48.microcredits_yield_per_epoch r1231.microcredits_yield_per_epoch into r1245;
    ternary r1123 r48.commission r1231.commission into r1246;
    ternary r1123 r48.boost r1231.boost into r1247;
    cast r1241 r1242 r1243 r1244 r1245 r1246 r1247 into r1248 as validator_datum;
    ternary r1123 r1122.delegator r1239.delegator into r1249;
    ternary r1123 r1122.validator r1239.validator into r1250;
    ternary r1123 r1122.block_height r1239.block_height into r1251;
    ternary r1123 r1122.bonded_microcredits r1239.bonded_microcredits into r1252;
    ternary r1123 r1122.microcredits_yield_per_epoch r1239.microcredits_yield_per_epoch into r1253;
    ternary r1123 r1122.commission r1239.commission into r1254;
    ternary r1123 r1122.boost r1239.boost into r1255;
    cast r1249 r1250 r1251 r1252 r1253 r1254 r1255 into r1256 as validator_datum;
    ternary r1123 true r1240 into r1257;
    is.eq r1256.delegator r49.delegator into r1258;
    is.eq r1256.validator r49.validator into r1259;
    lt r49.block_height r50 into r1260;
    lt r1256.block_height r50 into r1261;
    is.eq r49.microcredits_yield_per_epoch 0u128 into r1262;
    is.eq r1256.microcredits_yield_per_epoch 0u128 into r1263;
    mul r1256.boost 1_000u128 into r1264;
    div r1264 r51[9u32] into r1265;
    add r1256.microcredits_yield_per_epoch r1265 into r1266;
    mul r49.boost 1_000u128 into r1267;
    div r1267 r51[9u32] into r1268;
    add r49.microcredits_yield_per_epoch r1268 into r1269;
    gt r1266 r1269 into r1270;
    lt r1266 r1269 into r1271;
    ternary r1259 r1270 r1271 into r1272;
    ternary r1272 r49.delegator r1256.delegator into r1273;
    ternary r1272 r49.validator r1256.validator into r1274;
    ternary r1272 r49.block_height r1256.block_height into r1275;
    ternary r1272 r49.bonded_microcredits r1256.bonded_microcredits into r1276;
    ternary r1272 r49.microcredits_yield_per_epoch r1256.microcredits_yield_per_epoch into r1277;
    ternary r1272 r49.commission r1256.commission into r1278;
    ternary r1272 r49.boost r1256.boost into r1279;
    cast r1273 r1274 r1275 r1276 r1277 r1278 r1279 into r1280 as validator_datum;
    ternary r1272 r1256.delegator r49.delegator into r1281;
    ternary r1272 r1256.validator r49.validator into r1282;
    ternary r1272 r1256.block_height r49.block_height into r1283;
    ternary r1272 r1256.bonded_microcredits r49.bonded_microcredits into r1284;
    ternary r1272 r1256.microcredits_yield_per_epoch r49.microcredits_yield_per_epoch into r1285;
    ternary r1272 r1256.commission r49.commission into r1286;
    ternary r1272 r1256.boost r49.boost into r1287;
    cast r1281 r1282 r1283 r1284 r1285 r1286 r1287 into r1288 as validator_datum;
    ternary r1272 r1259 r1259 into r1289;
    ternary r1263 r49.delegator r1280.delegator into r1290;
    ternary r1263 r49.validator r1280.validator into r1291;
    ternary r1263 r49.block_height r1280.block_height into r1292;
    ternary r1263 r49.bonded_microcredits r1280.bonded_microcredits into r1293;
    ternary r1263 r49.microcredits_yield_per_epoch r1280.microcredits_yield_per_epoch into r1294;
    ternary r1263 r49.commission r1280.commission into r1295;
    ternary r1263 r49.boost r1280.boost into r1296;
    cast r1290 r1291 r1292 r1293 r1294 r1295 r1296 into r1297 as validator_datum;
    ternary r1263 r1256.delegator r1288.delegator into r1298;
    ternary r1263 r1256.validator r1288.validator into r1299;
    ternary r1263 r1256.block_height r1288.block_height into r1300;
    ternary r1263 r1256.bonded_microcredits r1288.bonded_microcredits into r1301;
    ternary r1263 r1256.microcredits_yield_per_epoch r1288.microcredits_yield_per_epoch into r1302;
    ternary r1263 r1256.commission r1288.commission into r1303;
    ternary r1263 r1256.boost r1288.boost into r1304;
    cast r1298 r1299 r1300 r1301 r1302 r1303 r1304 into r1305 as validator_datum;
    ternary r1263 r1259 r1289 into r1306;
    ternary r1262 r1256.delegator r1297.delegator into r1307;
    ternary r1262 r1256.validator r1297.validator into r1308;
    ternary r1262 r1256.block_height r1297.block_height into r1309;
    ternary r1262 r1256.bonded_microcredits r1297.bonded_microcredits into r1310;
    ternary r1262 r1256.microcredits_yield_per_epoch r1297.microcredits_yield_per_epoch into r1311;
    ternary r1262 r1256.commission r1297.commission into r1312;
    ternary r1262 r1256.boost r1297.boost into r1313;
    cast r1307 r1308 r1309 r1310 r1311 r1312 r1313 into r1314 as validator_datum;
    ternary r1262 r49.delegator r1305.delegator into r1315;
    ternary r1262 r49.validator r1305.validator into r1316;
    ternary r1262 r49.block_height r1305.block_height into r1317;
    ternary r1262 r49.bonded_microcredits r1305.bonded_microcredits into r1318;
    ternary r1262 r49.microcredits_yield_per_epoch r1305.microcredits_yield_per_epoch into r1319;
    ternary r1262 r49.commission r1305.commission into r1320;
    ternary r1262 r49.boost r1305.boost into r1321;
    cast r1315 r1316 r1317 r1318 r1319 r1320 r1321 into r1322 as validator_datum;
    ternary r1262 r1259 r1306 into r1323;
    ternary r1261 r49.delegator r1314.delegator into r1324;
    ternary r1261 r49.validator r1314.validator into r1325;
    ternary r1261 r49.block_height r1314.block_height into r1326;
    ternary r1261 r49.bonded_microcredits r1314.bonded_microcredits into r1327;
    ternary r1261 r49.microcredits_yield_per_epoch r1314.microcredits_yield_per_epoch into r1328;
    ternary r1261 r49.commission r1314.commission into r1329;
    ternary r1261 r49.boost r1314.boost into r1330;
    cast r1324 r1325 r1326 r1327 r1328 r1329 r1330 into r1331 as validator_datum;
    ternary r1261 r1256.delegator r1322.delegator into r1332;
    ternary r1261 r1256.validator r1322.validator into r1333;
    ternary r1261 r1256.block_height r1322.block_height into r1334;
    ternary r1261 r1256.bonded_microcredits r1322.bonded_microcredits into r1335;
    ternary r1261 r1256.microcredits_yield_per_epoch r1322.microcredits_yield_per_epoch into r1336;
    ternary r1261 r1256.commission r1322.commission into r1337;
    ternary r1261 r1256.boost r1322.boost into r1338;
    cast r1332 r1333 r1334 r1335 r1336 r1337 r1338 into r1339 as validator_datum;
    ternary r1261 r1259 r1323 into r1340;
    ternary r1260 r1256.delegator r1331.delegator into r1341;
    ternary r1260 r1256.validator r1331.validator into r1342;
    ternary r1260 r1256.block_height r1331.block_height into r1343;
    ternary r1260 r1256.bonded_microcredits r1331.bonded_microcredits into r1344;
    ternary r1260 r1256.microcredits_yield_per_epoch r1331.microcredits_yield_per_epoch into r1345;
    ternary r1260 r1256.commission r1331.commission into r1346;
    ternary r1260 r1256.boost r1331.boost into r1347;
    cast r1341 r1342 r1343 r1344 r1345 r1346 r1347 into r1348 as validator_datum;
    ternary r1260 r49.delegator r1339.delegator into r1349;
    ternary r1260 r49.validator r1339.validator into r1350;
    ternary r1260 r49.block_height r1339.block_height into r1351;
    ternary r1260 r49.bonded_microcredits r1339.bonded_microcredits into r1352;
    ternary r1260 r49.microcredits_yield_per_epoch r1339.microcredits_yield_per_epoch into r1353;
    ternary r1260 r49.commission r1339.commission into r1354;
    ternary r1260 r49.boost r1339.boost into r1355;
    cast r1349 r1350 r1351 r1352 r1353 r1354 r1355 into r1356 as validator_datum;
    ternary r1260 r1259 r1340 into r1357;
    ternary r1258 r1256.delegator r1348.delegator into r1358;
    ternary r1258 r1256.validator r1348.validator into r1359;
    ternary r1258 r1256.block_height r1348.block_height into r1360;
    ternary r1258 r1256.bonded_microcredits r1348.bonded_microcredits into r1361;
    ternary r1258 r1256.microcredits_yield_per_epoch r1348.microcredits_yield_per_epoch into r1362;
    ternary r1258 r1256.commission r1348.commission into r1363;
    ternary r1258 r1256.boost r1348.boost into r1364;
    cast r1358 r1359 r1360 r1361 r1362 r1363 r1364 into r1365 as validator_datum;
    ternary r1258 r49.delegator r1356.delegator into r1366;
    ternary r1258 r49.validator r1356.validator into r1367;
    ternary r1258 r49.block_height r1356.block_height into r1368;
    ternary r1258 r49.bonded_microcredits r1356.bonded_microcredits into r1369;
    ternary r1258 r49.microcredits_yield_per_epoch r1356.microcredits_yield_per_epoch into r1370;
    ternary r1258 r49.commission r1356.commission into r1371;
    ternary r1258 r49.boost r1356.boost into r1372;
    cast r1366 r1367 r1368 r1369 r1370 r1371 r1372 into r1373 as validator_datum;
    ternary r1258 true r1357 into r1374;
    ternary r1257 r49.delegator r1365.delegator into r1375;
    ternary r1257 r49.validator r1365.validator into r1376;
    ternary r1257 r49.block_height r1365.block_height into r1377;
    ternary r1257 r49.bonded_microcredits r1365.bonded_microcredits into r1378;
    ternary r1257 r49.microcredits_yield_per_epoch r1365.microcredits_yield_per_epoch into r1379;
    ternary r1257 r49.commission r1365.commission into r1380;
    ternary r1257 r49.boost r1365.boost into r1381;
    cast r1375 r1376 r1377 r1378 r1379 r1380 r1381 into r1382 as validator_datum;
    ternary r1257 r1256.delegator r1373.delegator into r1383;
    ternary r1257 r1256.validator r1373.validator into r1384;
    ternary r1257 r1256.block_height r1373.block_height into r1385;
    ternary r1257 r1256.bonded_microcredits r1373.bonded_microcredits into r1386;
    ternary r1257 r1256.microcredits_yield_per_epoch r1373.microcredits_yield_per_epoch into r1387;
    ternary r1257 r1256.commission r1373.commission into r1388;
    ternary r1257 r1256.boost r1373.boost into r1389;
    cast r1383 r1384 r1385 r1386 r1387 r1388 r1389 into r1390 as validator_datum;
    ternary r1257 true r1374 into r1391;
    cast  r176.delegator r310.delegator r444.delegator r578.delegator r712.delegator r846.delegator r980.delegator r1114.delegator r1248.delegator r1382.delegator into r1392 as [address; 10u32];
    set r1392 into top_validators[0u8];






function remove_delegator:
    async remove_delegator self.caller into r0;
    output r0 as pondo_oracle.aleo/remove_delegator.future;

finalize remove_delegator:
    input r0 as address.public;
    rem block.height 120_960u32 into r1;
    lt r1 103_680u32 into r2;
    assert.eq r2 true;
    contains delegator_to_validator[r0] into r3;
    branch.eq r3 false to end_then_0_0;
    remove delegator_to_validator[r0];
    branch.eq true true to end_otherwise_0_1;
    position end_then_0_0;
    position end_otherwise_0_1;
    contains validator_data[r0] into r4;
    branch.eq r4 false to end_then_0_2;
    remove validator_data[r0];
    branch.eq true true to end_otherwise_0_3;
    position end_then_0_2;
    position end_otherwise_0_3;
    get top_validators[0u8] into r5;
    is.eq r5[0u32] r0 into r6;
    ternary r6 aleo1qqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqq3ljyzc r5[0u32] into r7;
    is.eq r5[1u32] r0 into r8;
    ternary r8 aleo1qqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqq3ljyzc r5[1u32] into r9;
    is.eq r5[2u32] r0 into r10;
    ternary r10 aleo1qqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqq3ljyzc r5[2u32] into r11;
    is.eq r5[3u32] r0 into r12;
    ternary r12 aleo1qqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqq3ljyzc r5[3u32] into r13;
    is.eq r5[4u32] r0 into r14;
    ternary r14 aleo1qqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqq3ljyzc r5[4u32] into r15;
    is.eq r5[5u32] r0 into r16;
    ternary r16 aleo1qqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqq3ljyzc r5[5u32] into r17;
    is.eq r5[6u32] r0 into r18;
    ternary r18 aleo1qqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqq3ljyzc r5[6u32] into r19;
    is.eq r5[7u32] r0 into r20;
    ternary r20 aleo1qqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqq3ljyzc r5[7u32] into r21;
    is.eq r5[8u32] r0 into r22;
    ternary r22 aleo1qqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqq3ljyzc r5[8u32] into r23;
    is.eq r5[9u32] r0 into r24;
    ternary r24 aleo1qqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqq3ljyzc r5[9u32] into r25;
    is.eq r7 aleo1qqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqq3ljyzc into r26;
    ternary r26 r9 r7 into r27;
    ternary r26 r7 r9 into r28;
    is.eq r28 aleo1qqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqq3ljyzc into r29;
    ternary r29 r11 r28 into r30;
    ternary r29 r28 r11 into r31;
    is.eq r31 aleo1qqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqq3ljyzc into r32;
    ternary r32 r13 r31 into r33;
    ternary r32 r31 r13 into r34;
    is.eq r34 aleo1qqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqq3ljyzc into r35;
    ternary r35 r15 r34 into r36;
    ternary r35 r34 r15 into r37;
    is.eq r37 aleo1qqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqq3ljyzc into r38;
    ternary r38 r17 r37 into r39;
    ternary r38 r37 r17 into r40;
    is.eq r40 aleo1qqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqq3ljyzc into r41;
    ternary r41 r19 r40 into r42;
    ternary r41 r40 r19 into r43;
    is.eq r43 aleo1qqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqq3ljyzc into r44;
    ternary r44 r21 r43 into r45;
    ternary r44 r43 r21 into r46;
    is.eq r46 aleo1qqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqq3ljyzc into r47;
    ternary r47 r23 r46 into r48;
    ternary r47 r46 r23 into r49;
    is.eq r49 aleo1qqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqq3ljyzc into r50;
    ternary r50 r25 r49 into r51;
    ternary r50 r49 r25 into r52;
    cast  r27 r30 r33 r36 r39 r42 r45 r48 r51 r52 into r53 as [address; 10u32];
    set r53 into top_validators[0u8];




function pondo_ban_validator:
    input r0 as address.public;
    async pondo_ban_validator r0 self.caller into r1;
    output r1 as pondo_oracle.aleo/pondo_ban_validator.future;

finalize pondo_ban_validator:
    input r0 as address.public;
    input r1 as address.public;
    contains control_addresses[r1] into r2;
    assert.eq r2 true;
    set true into banned_validators[r0];




function ban_validator:
    input r0 as address.public;
    async ban_validator r0 into r1;
    output r1 as pondo_oracle.aleo/ban_validator.future;

finalize ban_validator:
    input r0 as address.public;
    get delegator_to_validator[r0] into r1;
    rem block.height 120_960u32 into r2;
    gte r2 103_680u32 into r3;
    assert.eq r3 true;
    add 50u8 1u8 into r4;
    cast false r4 into r5 as committee_state;
    get.or_use credits.aleo/committee[r1] r5 into r6;
    not r6.is_open into r7;
    gt r6.commission 50u8 into r8;
    or r7 r8 into r9;
    assert.eq r9 true;
    set true into banned_validators[r1];




function set_pondo_tvl:
    input r0 as u64.public;
    assert.eq self.caller pondo_core_protocol.aleo;
    async set_pondo_tvl r0 into r1;
    output r1 as pondo_oracle.aleo/set_pondo_tvl.future;

finalize set_pondo_tvl:
    input r0 as u64.public;
    set r0 into pondo_tvl[0u8];




function ban_self:
    input r0 as address.private;
    async ban_self r0 self.caller into r1;
    output r1 as pondo_oracle.aleo/ban_self.future;

finalize ban_self:
    input r0 as address.public;
    input r1 as address.public;
    get credits.aleo/withdraw[r0] into r2;
    assert.eq r2 r1;
    contains credits.aleo/committee[r0] into r3;
    assert.eq r3 true;
    set true into banned_validators[r0];




function boost_validator:
    input r0 as address.public;
    input r1 as u64.public;
    call credits.aleo/transfer_public_as_signer pondo_core_protocol.aleo r1 into r2;
    async boost_validator r2 r0 r1 into r3;
    output r3 as pondo_oracle.aleo/boost_validator.future;

finalize boost_validator:
    input r0 as credits.aleo/transfer_public_as_signer.future;
    input r1 as address.public;
    input r2 as u64.public;
    await r0;
    div block.height 120_960u32 into r3;
    rem block.height 120_960u32 into r4;
    gte r4 103_680u32 into r5;
    not r5 into r6;
    assert.eq r6 true;
    cast 0u32 0u64 into r7 as validator_boost;
    get.or_use validator_boosting[r1] r7 into r8;
    is.eq r8.epoch r3 into r9;
    add r8.boost_amount r2 into r10;
    ternary r9 r10 r2 into r11;
    cast r3 r11 into r12 as validator_boost;
    set r12 into validator_boosting[r1];

