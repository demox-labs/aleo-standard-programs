import credits.aleo;
program pondo_oracle.aleo;

struct committee_state:
    is_open as boolean;
    commission as u8;

struct bond_state:
    validator as address;
    microcredits as u64;


struct validator_datum:
    delegator as address;
    validator as address;
    block_height as u32;
    bonded_microcredits as u64;
    microcredits_yield_per_epoch as u128;
    commission as u8;
    boost as u128;

struct validator_boost:
    epoch as u32;
    boost_amount as u64;


mapping delegator_to_validator:
	key as address.public;
	value as address.public;


mapping validator_data:
	key as address.public;
	value as validator_datum.public;


mapping top_validators:
	key as u8.public;
	value as [address; 10u32].public;


mapping banned_validators:
	key as address.public;
	value as boolean.public;


mapping pondo_tvl:
	key as u8.public;
	value as u64.public;


mapping validator_boosting:
	key as address.public;
	value as validator_boost.public;


mapping control_addresses:
	key as address.public;
	value as boolean.public;


mapping delegator_allocation:
	key as u8.public;
	value as [u128; 10u32].public;


function initialize:
    async initialize into r0;
    output r0 as pondo_oracle.aleo/initialize.future;

finalize initialize:
    set true into control_addresses[aleo12shtwnmf49t5atmad2jnk3e58ahtp749d9trctt9z3wryxyzt5pspp0nd0];
    set false into control_addresses[pondo_delegator1.aleo];
    set false into control_addresses[pondo_delegator2.aleo];
    set false into control_addresses[pondo_delegator3.aleo];
    set false into control_addresses[pondo_delegator4.aleo];
    set false into control_addresses[pondo_delegator5.aleo];
    cast  3700u128 2600u128 1600u128 1200u128 900u128 900u128 900u128 900u128 900u128 900u128 into r0 as [u128; 10u32];
    set r0 into delegator_allocation[0u8];
    cast  aleo1qqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqq3ljyzc aleo1qqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqq3ljyzc aleo1qqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqq3ljyzc aleo1qqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqq3ljyzc aleo1qqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqq3ljyzc aleo1qqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqq3ljyzc aleo1qqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqq3ljyzc aleo1qqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqq3ljyzc aleo1qqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqq3ljyzc aleo1qqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqq3ljyzc into r1 as [address; 10u32];
    set r1 into top_validators[0u8];




function add_control_address:
    input r0 as address.public;
    async add_control_address r0 self.caller into r1;
    output r1 as pondo_oracle.aleo/add_control_address.future;

finalize add_control_address:
    input r0 as address.public;
    input r1 as address.public;
    get control_addresses[r1] into r2;
    assert.eq r2 true;
    set false into control_addresses[r0];




function remove_control_address:
    input r0 as address.public;
    async remove_control_address r0 self.caller into r1;
    output r1 as pondo_oracle.aleo/remove_control_address.future;

finalize remove_control_address:
    input r0 as address.public;
    input r1 as address.public;
    get control_addresses[r1] into r2;
    assert.eq r2 true;
    remove control_addresses[r0];




function update_admin:
    input r0 as address.public;
    async update_admin r0 self.caller into r1;
    output r1 as pondo_oracle.aleo/update_admin.future;

finalize update_admin:
    input r0 as address.public;
    input r1 as address.public;
    get control_addresses[r1] into r2;
    assert.eq r2 true;
    set true into control_addresses[r0];
    remove control_addresses[r1];




function update_delegator_allocations:
    input r0 as [u128; 10u32].public;
    async update_delegator_allocations r0 self.caller into r1;
    output r1 as pondo_oracle.aleo/update_delegator_allocations.future;

finalize update_delegator_allocations:
    input r0 as [u128; 10u32].public;
    input r1 as address.public;
    get control_addresses[r1] into r2;
    assert.eq r2 true;
    set r0 into delegator_allocation[0u8];




function propose_delegator:
    input r0 as address.public;
    assert.neq self.caller self.signer;
    async propose_delegator self.caller r0 into r1;
    output r1 as pondo_oracle.aleo/propose_delegator.future;

finalize propose_delegator:
    input r0 as address.public;
    input r1 as address.public;
    contains banned_validators[r1] into r2;
    assert.eq r2 false;
    contains delegator_to_validator[r0] into r3;
    assert.eq r3 false;
    set r1 into delegator_to_validator[r0];




function add_delegator:
    input r0 as address.public;
    async add_delegator r0 self.caller into r1;
    output r1 as pondo_oracle.aleo/add_delegator.future;

finalize add_delegator:
    input r0 as address.public;
    input r1 as address.public;
    get control_addresses[r1] into r2;
    assert.eq r2 true;
    contains delegator_to_validator[r0] into r3;
    assert.eq r3 true;
    get credits.aleo/withdraw[r0] into r4;
    assert.eq r4 r0;
    get delegator_to_validator[r0] into r5;
    get credits.aleo/bonded[r0] into r6;
    assert.eq r6.validator r5;
    contains banned_validators[r5] into r7;
    assert.eq r7 false;
    contains validator_data[r0] into r8;
    assert.eq r8 false;
    get credits.aleo/committee[r5] into r9;
    assert.eq r9.is_open true;
    lt r9.commission 50u8 into r10;
    assert.eq r10 true;
    cast r0 r5 block.height r6.microcredits 0u128 r9.commission 0u128 into r11 as validator_datum;
    set r11 into validator_data[r0];








function update_data:
    input r0 as address.public;
    async update_data r0 into r1;
    output r1 as pondo_oracle.aleo/update_data.future;

finalize update_data:
    input r0 as address.public;
    get validator_data[r0] into r1;
    contains banned_validators[r1.validator] into r2;
    assert.eq r2 false;
    rem block.height 120_960u32 into r3;
    gte r3 103_680u32 into r4;
    assert.eq r4 true;
    sub block.height r1.block_height into r5;
    gt r5 103_680u32 into r6;
    assert.eq r6 true;
    get credits.aleo/committee[r1.validator] into r7;
    lt r7.commission 50u8 into r8;
    assert.eq r8 true;
    assert.eq r7.is_open true;
    get credits.aleo/bonded[r0] into r9;
    div block.height 120_960u32 into r10;
    cast r9.microcredits into r11 as u128;
    cast r1.bonded_microcredits into r12 as u128;
    sub r11 r12 into r13;
    mul r13 10_000_000_000u128 into r14;
    cast r1.bonded_microcredits into r15 as u128;
    div r14 r15 into r16;
    cast 120_960u32 into r17 as u128;
    mul r16 r17 into r18;
    cast r5 into r19 as u128;
    div r18 r19 into r20;
    cast 0u32 0u64 into r21 as validator_boost;
    get.or_use validator_boosting[r1.validator] r21 into r22;
    is.eq r22.epoch r10 into r23;
    cast r22.boost_amount into r24 as u128;
    ternary r23 r24 0u128 into r25;
    get.or_use pondo_tvl[0u8] 10_000_000_000_000_000u64 into r26;
    cast r26 into r27 as u128;
    mul r25 10_000_000_000u128 into r28;
    cast r27 into r29 as u128;
    div r28 r29 into r30;
    div r1.block_height 120_960u32 into r31;
    add r31 1u32 into r32;
    is.eq r32 r10 into r33;
    ternary r33 r20 0u128 into r34;
    cast r0 r1.validator block.height r9.microcredits r34 r7.commission r30 into r35 as validator_datum;
    get top_validators[0u8] into r36;
    cast aleo1qqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqq3ljyzc aleo1qqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqq3ljyzc 0u32 0u64 0u128 0u8 0u128 into r37 as validator_datum;
    get.or_use validator_data[r36[0u32]] r37 into r38;
    get.or_use validator_data[r36[1u32]] r37 into r39;
    get.or_use validator_data[r36[2u32]] r37 into r40;
    get.or_use validator_data[r36[3u32]] r37 into r41;
    get.or_use validator_data[r36[4u32]] r37 into r42;
    get.or_use validator_data[r36[5u32]] r37 into r43;
    get.or_use validator_data[r36[6u32]] r37 into r44;
    get.or_use validator_data[r36[7u32]] r37 into r45;
    get.or_use validator_data[r36[8u32]] r37 into r46;
    get.or_use validator_data[r36[9u32]] r37 into r47;
    mul r10 120_960u32 into r48;
    get delegator_allocation[0u8] into r49;
    lt r38.block_height r48 into r50;
    lt r35.block_height r48 into r51;
    is.eq r38.microcredits_yield_per_epoch 0u128 into r52;
    is.eq r35.microcredits_yield_per_epoch 0u128 into r53;
    mul r35.boost 10_000u128 into r54;
    div r54 r49[0u32] into r55;
    add r35.microcredits_yield_per_epoch r55 into r56;
    mul r38.boost 10_000u128 into r57;
    div r57 r49[0u32] into r58;
    add r38.microcredits_yield_per_epoch r58 into r59;
    is.eq r35.validator r38.validator into r60;
    gt r56 r59 into r61;
    lt r56 r59 into r62;
    ternary r60 r61 r62 into r63;
    ternary r63 r38.delegator r35.delegator into r64;
    ternary r63 r38.validator r35.validator into r65;
    ternary r63 r38.block_height r35.block_height into r66;
    ternary r63 r38.bonded_microcredits r35.bonded_microcredits into r67;
    ternary r63 r38.microcredits_yield_per_epoch r35.microcredits_yield_per_epoch into r68;
    ternary r63 r38.commission r35.commission into r69;
    ternary r63 r38.boost r35.boost into r70;
    cast r64 r65 r66 r67 r68 r69 r70 into r71 as validator_datum;
    ternary r63 r35.delegator r38.delegator into r72;
    ternary r63 r35.validator r38.validator into r73;
    ternary r63 r35.block_height r38.block_height into r74;
    ternary r63 r35.bonded_microcredits r38.bonded_microcredits into r75;
    ternary r63 r35.microcredits_yield_per_epoch r38.microcredits_yield_per_epoch into r76;
    ternary r63 r35.commission r38.commission into r77;
    ternary r63 r35.boost r38.boost into r78;
    cast r72 r73 r74 r75 r76 r77 r78 into r79 as validator_datum;
    ternary r53 r38.delegator r71.delegator into r80;
    ternary r53 r38.validator r71.validator into r81;
    ternary r53 r38.block_height r71.block_height into r82;
    ternary r53 r38.bonded_microcredits r71.bonded_microcredits into r83;
    ternary r53 r38.microcredits_yield_per_epoch r71.microcredits_yield_per_epoch into r84;
    ternary r53 r38.commission r71.commission into r85;
    ternary r53 r38.boost r71.boost into r86;
    cast r80 r81 r82 r83 r84 r85 r86 into r87 as validator_datum;
    ternary r53 r35.delegator r79.delegator into r88;
    ternary r53 r35.validator r79.validator into r89;
    ternary r53 r35.block_height r79.block_height into r90;
    ternary r53 r35.bonded_microcredits r79.bonded_microcredits into r91;
    ternary r53 r35.microcredits_yield_per_epoch r79.microcredits_yield_per_epoch into r92;
    ternary r53 r35.commission r79.commission into r93;
    ternary r53 r35.boost r79.boost into r94;
    cast r88 r89 r90 r91 r92 r93 r94 into r95 as validator_datum;
    ternary r52 r35.delegator r87.delegator into r96;
    ternary r52 r35.validator r87.validator into r97;
    ternary r52 r35.block_height r87.block_height into r98;
    ternary r52 r35.bonded_microcredits r87.bonded_microcredits into r99;
    ternary r52 r35.microcredits_yield_per_epoch r87.microcredits_yield_per_epoch into r100;
    ternary r52 r35.commission r87.commission into r101;
    ternary r52 r35.boost r87.boost into r102;
    cast r96 r97 r98 r99 r100 r101 r102 into r103 as validator_datum;
    ternary r52 r38.delegator r95.delegator into r104;
    ternary r52 r38.validator r95.validator into r105;
    ternary r52 r38.block_height r95.block_height into r106;
    ternary r52 r38.bonded_microcredits r95.bonded_microcredits into r107;
    ternary r52 r38.microcredits_yield_per_epoch r95.microcredits_yield_per_epoch into r108;
    ternary r52 r38.commission r95.commission into r109;
    ternary r52 r38.boost r95.boost into r110;
    cast r104 r105 r106 r107 r108 r109 r110 into r111 as validator_datum;
    ternary r51 r38.delegator r103.delegator into r112;
    ternary r51 r38.validator r103.validator into r113;
    ternary r51 r38.block_height r103.block_height into r114;
    ternary r51 r38.bonded_microcredits r103.bonded_microcredits into r115;
    ternary r51 r38.microcredits_yield_per_epoch r103.microcredits_yield_per_epoch into r116;
    ternary r51 r38.commission r103.commission into r117;
    ternary r51 r38.boost r103.boost into r118;
    cast r112 r113 r114 r115 r116 r117 r118 into r119 as validator_datum;
    ternary r51 r35.delegator r111.delegator into r120;
    ternary r51 r35.validator r111.validator into r121;
    ternary r51 r35.block_height r111.block_height into r122;
    ternary r51 r35.bonded_microcredits r111.bonded_microcredits into r123;
    ternary r51 r35.microcredits_yield_per_epoch r111.microcredits_yield_per_epoch into r124;
    ternary r51 r35.commission r111.commission into r125;
    ternary r51 r35.boost r111.boost into r126;
    cast r120 r121 r122 r123 r124 r125 r126 into r127 as validator_datum;
    ternary r50 r35.delegator r119.delegator into r128;
    ternary r50 r35.validator r119.validator into r129;
    ternary r50 r35.block_height r119.block_height into r130;
    ternary r50 r35.bonded_microcredits r119.bonded_microcredits into r131;
    ternary r50 r35.microcredits_yield_per_epoch r119.microcredits_yield_per_epoch into r132;
    ternary r50 r35.commission r119.commission into r133;
    ternary r50 r35.boost r119.boost into r134;
    cast r128 r129 r130 r131 r132 r133 r134 into r135 as validator_datum;
    ternary r50 r38.delegator r127.delegator into r136;
    ternary r50 r38.validator r127.validator into r137;
    ternary r50 r38.block_height r127.block_height into r138;
    ternary r50 r38.bonded_microcredits r127.bonded_microcredits into r139;
    ternary r50 r38.microcredits_yield_per_epoch r127.microcredits_yield_per_epoch into r140;
    ternary r50 r38.commission r127.commission into r141;
    ternary r50 r38.boost r127.boost into r142;
    cast r136 r137 r138 r139 r140 r141 r142 into r143 as validator_datum;
    lt r39.block_height r48 into r144;
    lt r143.block_height r48 into r145;
    is.eq r39.microcredits_yield_per_epoch 0u128 into r146;
    is.eq r143.microcredits_yield_per_epoch 0u128 into r147;
    mul r143.boost 10_000u128 into r148;
    div r148 r49[1u32] into r149;
    add r143.microcredits_yield_per_epoch r149 into r150;
    mul r39.boost 10_000u128 into r151;
    div r151 r49[1u32] into r152;
    add r39.microcredits_yield_per_epoch r152 into r153;
    is.eq r143.validator r39.validator into r154;
    gt r150 r153 into r155;
    lt r150 r153 into r156;
    ternary r154 r155 r156 into r157;
    ternary r157 r39.delegator r143.delegator into r158;
    ternary r157 r39.validator r143.validator into r159;
    ternary r157 r39.block_height r143.block_height into r160;
    ternary r157 r39.bonded_microcredits r143.bonded_microcredits into r161;
    ternary r157 r39.microcredits_yield_per_epoch r143.microcredits_yield_per_epoch into r162;
    ternary r157 r39.commission r143.commission into r163;
    ternary r157 r39.boost r143.boost into r164;
    cast r158 r159 r160 r161 r162 r163 r164 into r165 as validator_datum;
    ternary r157 r143.delegator r39.delegator into r166;
    ternary r157 r143.validator r39.validator into r167;
    ternary r157 r143.block_height r39.block_height into r168;
    ternary r157 r143.bonded_microcredits r39.bonded_microcredits into r169;
    ternary r157 r143.microcredits_yield_per_epoch r39.microcredits_yield_per_epoch into r170;
    ternary r157 r143.commission r39.commission into r171;
    ternary r157 r143.boost r39.boost into r172;
    cast r166 r167 r168 r169 r170 r171 r172 into r173 as validator_datum;
    ternary r147 r39.delegator r165.delegator into r174;
    ternary r147 r39.validator r165.validator into r175;
    ternary r147 r39.block_height r165.block_height into r176;
    ternary r147 r39.bonded_microcredits r165.bonded_microcredits into r177;
    ternary r147 r39.microcredits_yield_per_epoch r165.microcredits_yield_per_epoch into r178;
    ternary r147 r39.commission r165.commission into r179;
    ternary r147 r39.boost r165.boost into r180;
    cast r174 r175 r176 r177 r178 r179 r180 into r181 as validator_datum;
    ternary r147 r143.delegator r173.delegator into r182;
    ternary r147 r143.validator r173.validator into r183;
    ternary r147 r143.block_height r173.block_height into r184;
    ternary r147 r143.bonded_microcredits r173.bonded_microcredits into r185;
    ternary r147 r143.microcredits_yield_per_epoch r173.microcredits_yield_per_epoch into r186;
    ternary r147 r143.commission r173.commission into r187;
    ternary r147 r143.boost r173.boost into r188;
    cast r182 r183 r184 r185 r186 r187 r188 into r189 as validator_datum;
    ternary r146 r143.delegator r181.delegator into r190;
    ternary r146 r143.validator r181.validator into r191;
    ternary r146 r143.block_height r181.block_height into r192;
    ternary r146 r143.bonded_microcredits r181.bonded_microcredits into r193;
    ternary r146 r143.microcredits_yield_per_epoch r181.microcredits_yield_per_epoch into r194;
    ternary r146 r143.commission r181.commission into r195;
    ternary r146 r143.boost r181.boost into r196;
    cast r190 r191 r192 r193 r194 r195 r196 into r197 as validator_datum;
    ternary r146 r39.delegator r189.delegator into r198;
    ternary r146 r39.validator r189.validator into r199;
    ternary r146 r39.block_height r189.block_height into r200;
    ternary r146 r39.bonded_microcredits r189.bonded_microcredits into r201;
    ternary r146 r39.microcredits_yield_per_epoch r189.microcredits_yield_per_epoch into r202;
    ternary r146 r39.commission r189.commission into r203;
    ternary r146 r39.boost r189.boost into r204;
    cast r198 r199 r200 r201 r202 r203 r204 into r205 as validator_datum;
    ternary r145 r39.delegator r197.delegator into r206;
    ternary r145 r39.validator r197.validator into r207;
    ternary r145 r39.block_height r197.block_height into r208;
    ternary r145 r39.bonded_microcredits r197.bonded_microcredits into r209;
    ternary r145 r39.microcredits_yield_per_epoch r197.microcredits_yield_per_epoch into r210;
    ternary r145 r39.commission r197.commission into r211;
    ternary r145 r39.boost r197.boost into r212;
    cast r206 r207 r208 r209 r210 r211 r212 into r213 as validator_datum;
    ternary r145 r143.delegator r205.delegator into r214;
    ternary r145 r143.validator r205.validator into r215;
    ternary r145 r143.block_height r205.block_height into r216;
    ternary r145 r143.bonded_microcredits r205.bonded_microcredits into r217;
    ternary r145 r143.microcredits_yield_per_epoch r205.microcredits_yield_per_epoch into r218;
    ternary r145 r143.commission r205.commission into r219;
    ternary r145 r143.boost r205.boost into r220;
    cast r214 r215 r216 r217 r218 r219 r220 into r221 as validator_datum;
    ternary r144 r143.delegator r213.delegator into r222;
    ternary r144 r143.validator r213.validator into r223;
    ternary r144 r143.block_height r213.block_height into r224;
    ternary r144 r143.bonded_microcredits r213.bonded_microcredits into r225;
    ternary r144 r143.microcredits_yield_per_epoch r213.microcredits_yield_per_epoch into r226;
    ternary r144 r143.commission r213.commission into r227;
    ternary r144 r143.boost r213.boost into r228;
    cast r222 r223 r224 r225 r226 r227 r228 into r229 as validator_datum;
    ternary r144 r39.delegator r221.delegator into r230;
    ternary r144 r39.validator r221.validator into r231;
    ternary r144 r39.block_height r221.block_height into r232;
    ternary r144 r39.bonded_microcredits r221.bonded_microcredits into r233;
    ternary r144 r39.microcredits_yield_per_epoch r221.microcredits_yield_per_epoch into r234;
    ternary r144 r39.commission r221.commission into r235;
    ternary r144 r39.boost r221.boost into r236;
    cast r230 r231 r232 r233 r234 r235 r236 into r237 as validator_datum;
    lt r40.block_height r48 into r238;
    lt r237.block_height r48 into r239;
    is.eq r40.microcredits_yield_per_epoch 0u128 into r240;
    is.eq r237.microcredits_yield_per_epoch 0u128 into r241;
    mul r237.boost 10_000u128 into r242;
    div r242 r49[2u32] into r243;
    add r237.microcredits_yield_per_epoch r243 into r244;
    mul r40.boost 10_000u128 into r245;
    div r245 r49[2u32] into r246;
    add r40.microcredits_yield_per_epoch r246 into r247;
    is.eq r237.validator r40.validator into r248;
    gt r244 r247 into r249;
    lt r244 r247 into r250;
    ternary r248 r249 r250 into r251;
    ternary r251 r40.delegator r237.delegator into r252;
    ternary r251 r40.validator r237.validator into r253;
    ternary r251 r40.block_height r237.block_height into r254;
    ternary r251 r40.bonded_microcredits r237.bonded_microcredits into r255;
    ternary r251 r40.microcredits_yield_per_epoch r237.microcredits_yield_per_epoch into r256;
    ternary r251 r40.commission r237.commission into r257;
    ternary r251 r40.boost r237.boost into r258;
    cast r252 r253 r254 r255 r256 r257 r258 into r259 as validator_datum;
    ternary r251 r237.delegator r40.delegator into r260;
    ternary r251 r237.validator r40.validator into r261;
    ternary r251 r237.block_height r40.block_height into r262;
    ternary r251 r237.bonded_microcredits r40.bonded_microcredits into r263;
    ternary r251 r237.microcredits_yield_per_epoch r40.microcredits_yield_per_epoch into r264;
    ternary r251 r237.commission r40.commission into r265;
    ternary r251 r237.boost r40.boost into r266;
    cast r260 r261 r262 r263 r264 r265 r266 into r267 as validator_datum;
    ternary r241 r40.delegator r259.delegator into r268;
    ternary r241 r40.validator r259.validator into r269;
    ternary r241 r40.block_height r259.block_height into r270;
    ternary r241 r40.bonded_microcredits r259.bonded_microcredits into r271;
    ternary r241 r40.microcredits_yield_per_epoch r259.microcredits_yield_per_epoch into r272;
    ternary r241 r40.commission r259.commission into r273;
    ternary r241 r40.boost r259.boost into r274;
    cast r268 r269 r270 r271 r272 r273 r274 into r275 as validator_datum;
    ternary r241 r237.delegator r267.delegator into r276;
    ternary r241 r237.validator r267.validator into r277;
    ternary r241 r237.block_height r267.block_height into r278;
    ternary r241 r237.bonded_microcredits r267.bonded_microcredits into r279;
    ternary r241 r237.microcredits_yield_per_epoch r267.microcredits_yield_per_epoch into r280;
    ternary r241 r237.commission r267.commission into r281;
    ternary r241 r237.boost r267.boost into r282;
    cast r276 r277 r278 r279 r280 r281 r282 into r283 as validator_datum;
    ternary r240 r237.delegator r275.delegator into r284;
    ternary r240 r237.validator r275.validator into r285;
    ternary r240 r237.block_height r275.block_height into r286;
    ternary r240 r237.bonded_microcredits r275.bonded_microcredits into r287;
    ternary r240 r237.microcredits_yield_per_epoch r275.microcredits_yield_per_epoch into r288;
    ternary r240 r237.commission r275.commission into r289;
    ternary r240 r237.boost r275.boost into r290;
    cast r284 r285 r286 r287 r288 r289 r290 into r291 as validator_datum;
    ternary r240 r40.delegator r283.delegator into r292;
    ternary r240 r40.validator r283.validator into r293;
    ternary r240 r40.block_height r283.block_height into r294;
    ternary r240 r40.bonded_microcredits r283.bonded_microcredits into r295;
    ternary r240 r40.microcredits_yield_per_epoch r283.microcredits_yield_per_epoch into r296;
    ternary r240 r40.commission r283.commission into r297;
    ternary r240 r40.boost r283.boost into r298;
    cast r292 r293 r294 r295 r296 r297 r298 into r299 as validator_datum;
    ternary r239 r40.delegator r291.delegator into r300;
    ternary r239 r40.validator r291.validator into r301;
    ternary r239 r40.block_height r291.block_height into r302;
    ternary r239 r40.bonded_microcredits r291.bonded_microcredits into r303;
    ternary r239 r40.microcredits_yield_per_epoch r291.microcredits_yield_per_epoch into r304;
    ternary r239 r40.commission r291.commission into r305;
    ternary r239 r40.boost r291.boost into r306;
    cast r300 r301 r302 r303 r304 r305 r306 into r307 as validator_datum;
    ternary r239 r237.delegator r299.delegator into r308;
    ternary r239 r237.validator r299.validator into r309;
    ternary r239 r237.block_height r299.block_height into r310;
    ternary r239 r237.bonded_microcredits r299.bonded_microcredits into r311;
    ternary r239 r237.microcredits_yield_per_epoch r299.microcredits_yield_per_epoch into r312;
    ternary r239 r237.commission r299.commission into r313;
    ternary r239 r237.boost r299.boost into r314;
    cast r308 r309 r310 r311 r312 r313 r314 into r315 as validator_datum;
    ternary r238 r237.delegator r307.delegator into r316;
    ternary r238 r237.validator r307.validator into r317;
    ternary r238 r237.block_height r307.block_height into r318;
    ternary r238 r237.bonded_microcredits r307.bonded_microcredits into r319;
    ternary r238 r237.microcredits_yield_per_epoch r307.microcredits_yield_per_epoch into r320;
    ternary r238 r237.commission r307.commission into r321;
    ternary r238 r237.boost r307.boost into r322;
    cast r316 r317 r318 r319 r320 r321 r322 into r323 as validator_datum;
    ternary r238 r40.delegator r315.delegator into r324;
    ternary r238 r40.validator r315.validator into r325;
    ternary r238 r40.block_height r315.block_height into r326;
    ternary r238 r40.bonded_microcredits r315.bonded_microcredits into r327;
    ternary r238 r40.microcredits_yield_per_epoch r315.microcredits_yield_per_epoch into r328;
    ternary r238 r40.commission r315.commission into r329;
    ternary r238 r40.boost r315.boost into r330;
    cast r324 r325 r326 r327 r328 r329 r330 into r331 as validator_datum;
    lt r41.block_height r48 into r332;
    lt r331.block_height r48 into r333;
    is.eq r41.microcredits_yield_per_epoch 0u128 into r334;
    is.eq r331.microcredits_yield_per_epoch 0u128 into r335;
    mul r331.boost 10_000u128 into r336;
    div r336 r49[3u32] into r337;
    add r331.microcredits_yield_per_epoch r337 into r338;
    mul r41.boost 10_000u128 into r339;
    div r339 r49[3u32] into r340;
    add r41.microcredits_yield_per_epoch r340 into r341;
    is.eq r331.validator r41.validator into r342;
    gt r338 r341 into r343;
    lt r338 r341 into r344;
    ternary r342 r343 r344 into r345;
    ternary r345 r41.delegator r331.delegator into r346;
    ternary r345 r41.validator r331.validator into r347;
    ternary r345 r41.block_height r331.block_height into r348;
    ternary r345 r41.bonded_microcredits r331.bonded_microcredits into r349;
    ternary r345 r41.microcredits_yield_per_epoch r331.microcredits_yield_per_epoch into r350;
    ternary r345 r41.commission r331.commission into r351;
    ternary r345 r41.boost r331.boost into r352;
    cast r346 r347 r348 r349 r350 r351 r352 into r353 as validator_datum;
    ternary r345 r331.delegator r41.delegator into r354;
    ternary r345 r331.validator r41.validator into r355;
    ternary r345 r331.block_height r41.block_height into r356;
    ternary r345 r331.bonded_microcredits r41.bonded_microcredits into r357;
    ternary r345 r331.microcredits_yield_per_epoch r41.microcredits_yield_per_epoch into r358;
    ternary r345 r331.commission r41.commission into r359;
    ternary r345 r331.boost r41.boost into r360;
    cast r354 r355 r356 r357 r358 r359 r360 into r361 as validator_datum;
    ternary r335 r41.delegator r353.delegator into r362;
    ternary r335 r41.validator r353.validator into r363;
    ternary r335 r41.block_height r353.block_height into r364;
    ternary r335 r41.bonded_microcredits r353.bonded_microcredits into r365;
    ternary r335 r41.microcredits_yield_per_epoch r353.microcredits_yield_per_epoch into r366;
    ternary r335 r41.commission r353.commission into r367;
    ternary r335 r41.boost r353.boost into r368;
    cast r362 r363 r364 r365 r366 r367 r368 into r369 as validator_datum;
    ternary r335 r331.delegator r361.delegator into r370;
    ternary r335 r331.validator r361.validator into r371;
    ternary r335 r331.block_height r361.block_height into r372;
    ternary r335 r331.bonded_microcredits r361.bonded_microcredits into r373;
    ternary r335 r331.microcredits_yield_per_epoch r361.microcredits_yield_per_epoch into r374;
    ternary r335 r331.commission r361.commission into r375;
    ternary r335 r331.boost r361.boost into r376;
    cast r370 r371 r372 r373 r374 r375 r376 into r377 as validator_datum;
    ternary r334 r331.delegator r369.delegator into r378;
    ternary r334 r331.validator r369.validator into r379;
    ternary r334 r331.block_height r369.block_height into r380;
    ternary r334 r331.bonded_microcredits r369.bonded_microcredits into r381;
    ternary r334 r331.microcredits_yield_per_epoch r369.microcredits_yield_per_epoch into r382;
    ternary r334 r331.commission r369.commission into r383;
    ternary r334 r331.boost r369.boost into r384;
    cast r378 r379 r380 r381 r382 r383 r384 into r385 as validator_datum;
    ternary r334 r41.delegator r377.delegator into r386;
    ternary r334 r41.validator r377.validator into r387;
    ternary r334 r41.block_height r377.block_height into r388;
    ternary r334 r41.bonded_microcredits r377.bonded_microcredits into r389;
    ternary r334 r41.microcredits_yield_per_epoch r377.microcredits_yield_per_epoch into r390;
    ternary r334 r41.commission r377.commission into r391;
    ternary r334 r41.boost r377.boost into r392;
    cast r386 r387 r388 r389 r390 r391 r392 into r393 as validator_datum;
    ternary r333 r41.delegator r385.delegator into r394;
    ternary r333 r41.validator r385.validator into r395;
    ternary r333 r41.block_height r385.block_height into r396;
    ternary r333 r41.bonded_microcredits r385.bonded_microcredits into r397;
    ternary r333 r41.microcredits_yield_per_epoch r385.microcredits_yield_per_epoch into r398;
    ternary r333 r41.commission r385.commission into r399;
    ternary r333 r41.boost r385.boost into r400;
    cast r394 r395 r396 r397 r398 r399 r400 into r401 as validator_datum;
    ternary r333 r331.delegator r393.delegator into r402;
    ternary r333 r331.validator r393.validator into r403;
    ternary r333 r331.block_height r393.block_height into r404;
    ternary r333 r331.bonded_microcredits r393.bonded_microcredits into r405;
    ternary r333 r331.microcredits_yield_per_epoch r393.microcredits_yield_per_epoch into r406;
    ternary r333 r331.commission r393.commission into r407;
    ternary r333 r331.boost r393.boost into r408;
    cast r402 r403 r404 r405 r406 r407 r408 into r409 as validator_datum;
    ternary r332 r331.delegator r401.delegator into r410;
    ternary r332 r331.validator r401.validator into r411;
    ternary r332 r331.block_height r401.block_height into r412;
    ternary r332 r331.bonded_microcredits r401.bonded_microcredits into r413;
    ternary r332 r331.microcredits_yield_per_epoch r401.microcredits_yield_per_epoch into r414;
    ternary r332 r331.commission r401.commission into r415;
    ternary r332 r331.boost r401.boost into r416;
    cast r410 r411 r412 r413 r414 r415 r416 into r417 as validator_datum;
    ternary r332 r41.delegator r409.delegator into r418;
    ternary r332 r41.validator r409.validator into r419;
    ternary r332 r41.block_height r409.block_height into r420;
    ternary r332 r41.bonded_microcredits r409.bonded_microcredits into r421;
    ternary r332 r41.microcredits_yield_per_epoch r409.microcredits_yield_per_epoch into r422;
    ternary r332 r41.commission r409.commission into r423;
    ternary r332 r41.boost r409.boost into r424;
    cast r418 r419 r420 r421 r422 r423 r424 into r425 as validator_datum;
    lt r42.block_height r48 into r426;
    lt r425.block_height r48 into r427;
    is.eq r42.microcredits_yield_per_epoch 0u128 into r428;
    is.eq r425.microcredits_yield_per_epoch 0u128 into r429;
    mul r425.boost 10_000u128 into r430;
    div r430 r49[4u32] into r431;
    add r425.microcredits_yield_per_epoch r431 into r432;
    mul r42.boost 10_000u128 into r433;
    div r433 r49[4u32] into r434;
    add r42.microcredits_yield_per_epoch r434 into r435;
    is.eq r425.validator r42.validator into r436;
    gt r432 r435 into r437;
    lt r432 r435 into r438;
    ternary r436 r437 r438 into r439;
    ternary r439 r42.delegator r425.delegator into r440;
    ternary r439 r42.validator r425.validator into r441;
    ternary r439 r42.block_height r425.block_height into r442;
    ternary r439 r42.bonded_microcredits r425.bonded_microcredits into r443;
    ternary r439 r42.microcredits_yield_per_epoch r425.microcredits_yield_per_epoch into r444;
    ternary r439 r42.commission r425.commission into r445;
    ternary r439 r42.boost r425.boost into r446;
    cast r440 r441 r442 r443 r444 r445 r446 into r447 as validator_datum;
    ternary r439 r425.delegator r42.delegator into r448;
    ternary r439 r425.validator r42.validator into r449;
    ternary r439 r425.block_height r42.block_height into r450;
    ternary r439 r425.bonded_microcredits r42.bonded_microcredits into r451;
    ternary r439 r425.microcredits_yield_per_epoch r42.microcredits_yield_per_epoch into r452;
    ternary r439 r425.commission r42.commission into r453;
    ternary r439 r425.boost r42.boost into r454;
    cast r448 r449 r450 r451 r452 r453 r454 into r455 as validator_datum;
    ternary r429 r42.delegator r447.delegator into r456;
    ternary r429 r42.validator r447.validator into r457;
    ternary r429 r42.block_height r447.block_height into r458;
    ternary r429 r42.bonded_microcredits r447.bonded_microcredits into r459;
    ternary r429 r42.microcredits_yield_per_epoch r447.microcredits_yield_per_epoch into r460;
    ternary r429 r42.commission r447.commission into r461;
    ternary r429 r42.boost r447.boost into r462;
    cast r456 r457 r458 r459 r460 r461 r462 into r463 as validator_datum;
    ternary r429 r425.delegator r455.delegator into r464;
    ternary r429 r425.validator r455.validator into r465;
    ternary r429 r425.block_height r455.block_height into r466;
    ternary r429 r425.bonded_microcredits r455.bonded_microcredits into r467;
    ternary r429 r425.microcredits_yield_per_epoch r455.microcredits_yield_per_epoch into r468;
    ternary r429 r425.commission r455.commission into r469;
    ternary r429 r425.boost r455.boost into r470;
    cast r464 r465 r466 r467 r468 r469 r470 into r471 as validator_datum;
    ternary r428 r425.delegator r463.delegator into r472;
    ternary r428 r425.validator r463.validator into r473;
    ternary r428 r425.block_height r463.block_height into r474;
    ternary r428 r425.bonded_microcredits r463.bonded_microcredits into r475;
    ternary r428 r425.microcredits_yield_per_epoch r463.microcredits_yield_per_epoch into r476;
    ternary r428 r425.commission r463.commission into r477;
    ternary r428 r425.boost r463.boost into r478;
    cast r472 r473 r474 r475 r476 r477 r478 into r479 as validator_datum;
    ternary r428 r42.delegator r471.delegator into r480;
    ternary r428 r42.validator r471.validator into r481;
    ternary r428 r42.block_height r471.block_height into r482;
    ternary r428 r42.bonded_microcredits r471.bonded_microcredits into r483;
    ternary r428 r42.microcredits_yield_per_epoch r471.microcredits_yield_per_epoch into r484;
    ternary r428 r42.commission r471.commission into r485;
    ternary r428 r42.boost r471.boost into r486;
    cast r480 r481 r482 r483 r484 r485 r486 into r487 as validator_datum;
    ternary r427 r42.delegator r479.delegator into r488;
    ternary r427 r42.validator r479.validator into r489;
    ternary r427 r42.block_height r479.block_height into r490;
    ternary r427 r42.bonded_microcredits r479.bonded_microcredits into r491;
    ternary r427 r42.microcredits_yield_per_epoch r479.microcredits_yield_per_epoch into r492;
    ternary r427 r42.commission r479.commission into r493;
    ternary r427 r42.boost r479.boost into r494;
    cast r488 r489 r490 r491 r492 r493 r494 into r495 as validator_datum;
    ternary r427 r425.delegator r487.delegator into r496;
    ternary r427 r425.validator r487.validator into r497;
    ternary r427 r425.block_height r487.block_height into r498;
    ternary r427 r425.bonded_microcredits r487.bonded_microcredits into r499;
    ternary r427 r425.microcredits_yield_per_epoch r487.microcredits_yield_per_epoch into r500;
    ternary r427 r425.commission r487.commission into r501;
    ternary r427 r425.boost r487.boost into r502;
    cast r496 r497 r498 r499 r500 r501 r502 into r503 as validator_datum;
    ternary r426 r425.delegator r495.delegator into r504;
    ternary r426 r425.validator r495.validator into r505;
    ternary r426 r425.block_height r495.block_height into r506;
    ternary r426 r425.bonded_microcredits r495.bonded_microcredits into r507;
    ternary r426 r425.microcredits_yield_per_epoch r495.microcredits_yield_per_epoch into r508;
    ternary r426 r425.commission r495.commission into r509;
    ternary r426 r425.boost r495.boost into r510;
    cast r504 r505 r506 r507 r508 r509 r510 into r511 as validator_datum;
    ternary r426 r42.delegator r503.delegator into r512;
    ternary r426 r42.validator r503.validator into r513;
    ternary r426 r42.block_height r503.block_height into r514;
    ternary r426 r42.bonded_microcredits r503.bonded_microcredits into r515;
    ternary r426 r42.microcredits_yield_per_epoch r503.microcredits_yield_per_epoch into r516;
    ternary r426 r42.commission r503.commission into r517;
    ternary r426 r42.boost r503.boost into r518;
    cast r512 r513 r514 r515 r516 r517 r518 into r519 as validator_datum;
    lt r43.block_height r48 into r520;
    lt r519.block_height r48 into r521;
    is.eq r43.microcredits_yield_per_epoch 0u128 into r522;
    is.eq r519.microcredits_yield_per_epoch 0u128 into r523;
    mul r519.boost 10_000u128 into r524;
    div r524 r49[5u32] into r525;
    add r519.microcredits_yield_per_epoch r525 into r526;
    mul r43.boost 10_000u128 into r527;
    div r527 r49[5u32] into r528;
    add r43.microcredits_yield_per_epoch r528 into r529;
    is.eq r519.validator r43.validator into r530;
    gt r526 r529 into r531;
    lt r526 r529 into r532;
    ternary r530 r531 r532 into r533;
    ternary r533 r43.delegator r519.delegator into r534;
    ternary r533 r43.validator r519.validator into r535;
    ternary r533 r43.block_height r519.block_height into r536;
    ternary r533 r43.bonded_microcredits r519.bonded_microcredits into r537;
    ternary r533 r43.microcredits_yield_per_epoch r519.microcredits_yield_per_epoch into r538;
    ternary r533 r43.commission r519.commission into r539;
    ternary r533 r43.boost r519.boost into r540;
    cast r534 r535 r536 r537 r538 r539 r540 into r541 as validator_datum;
    ternary r533 r519.delegator r43.delegator into r542;
    ternary r533 r519.validator r43.validator into r543;
    ternary r533 r519.block_height r43.block_height into r544;
    ternary r533 r519.bonded_microcredits r43.bonded_microcredits into r545;
    ternary r533 r519.microcredits_yield_per_epoch r43.microcredits_yield_per_epoch into r546;
    ternary r533 r519.commission r43.commission into r547;
    ternary r533 r519.boost r43.boost into r548;
    cast r542 r543 r544 r545 r546 r547 r548 into r549 as validator_datum;
    ternary r523 r43.delegator r541.delegator into r550;
    ternary r523 r43.validator r541.validator into r551;
    ternary r523 r43.block_height r541.block_height into r552;
    ternary r523 r43.bonded_microcredits r541.bonded_microcredits into r553;
    ternary r523 r43.microcredits_yield_per_epoch r541.microcredits_yield_per_epoch into r554;
    ternary r523 r43.commission r541.commission into r555;
    ternary r523 r43.boost r541.boost into r556;
    cast r550 r551 r552 r553 r554 r555 r556 into r557 as validator_datum;
    ternary r523 r519.delegator r549.delegator into r558;
    ternary r523 r519.validator r549.validator into r559;
    ternary r523 r519.block_height r549.block_height into r560;
    ternary r523 r519.bonded_microcredits r549.bonded_microcredits into r561;
    ternary r523 r519.microcredits_yield_per_epoch r549.microcredits_yield_per_epoch into r562;
    ternary r523 r519.commission r549.commission into r563;
    ternary r523 r519.boost r549.boost into r564;
    cast r558 r559 r560 r561 r562 r563 r564 into r565 as validator_datum;
    ternary r522 r519.delegator r557.delegator into r566;
    ternary r522 r519.validator r557.validator into r567;
    ternary r522 r519.block_height r557.block_height into r568;
    ternary r522 r519.bonded_microcredits r557.bonded_microcredits into r569;
    ternary r522 r519.microcredits_yield_per_epoch r557.microcredits_yield_per_epoch into r570;
    ternary r522 r519.commission r557.commission into r571;
    ternary r522 r519.boost r557.boost into r572;
    cast r566 r567 r568 r569 r570 r571 r572 into r573 as validator_datum;
    ternary r522 r43.delegator r565.delegator into r574;
    ternary r522 r43.validator r565.validator into r575;
    ternary r522 r43.block_height r565.block_height into r576;
    ternary r522 r43.bonded_microcredits r565.bonded_microcredits into r577;
    ternary r522 r43.microcredits_yield_per_epoch r565.microcredits_yield_per_epoch into r578;
    ternary r522 r43.commission r565.commission into r579;
    ternary r522 r43.boost r565.boost into r580;
    cast r574 r575 r576 r577 r578 r579 r580 into r581 as validator_datum;
    ternary r521 r43.delegator r573.delegator into r582;
    ternary r521 r43.validator r573.validator into r583;
    ternary r521 r43.block_height r573.block_height into r584;
    ternary r521 r43.bonded_microcredits r573.bonded_microcredits into r585;
    ternary r521 r43.microcredits_yield_per_epoch r573.microcredits_yield_per_epoch into r586;
    ternary r521 r43.commission r573.commission into r587;
    ternary r521 r43.boost r573.boost into r588;
    cast r582 r583 r584 r585 r586 r587 r588 into r589 as validator_datum;
    ternary r521 r519.delegator r581.delegator into r590;
    ternary r521 r519.validator r581.validator into r591;
    ternary r521 r519.block_height r581.block_height into r592;
    ternary r521 r519.bonded_microcredits r581.bonded_microcredits into r593;
    ternary r521 r519.microcredits_yield_per_epoch r581.microcredits_yield_per_epoch into r594;
    ternary r521 r519.commission r581.commission into r595;
    ternary r521 r519.boost r581.boost into r596;
    cast r590 r591 r592 r593 r594 r595 r596 into r597 as validator_datum;
    ternary r520 r519.delegator r589.delegator into r598;
    ternary r520 r519.validator r589.validator into r599;
    ternary r520 r519.block_height r589.block_height into r600;
    ternary r520 r519.bonded_microcredits r589.bonded_microcredits into r601;
    ternary r520 r519.microcredits_yield_per_epoch r589.microcredits_yield_per_epoch into r602;
    ternary r520 r519.commission r589.commission into r603;
    ternary r520 r519.boost r589.boost into r604;
    cast r598 r599 r600 r601 r602 r603 r604 into r605 as validator_datum;
    ternary r520 r43.delegator r597.delegator into r606;
    ternary r520 r43.validator r597.validator into r607;
    ternary r520 r43.block_height r597.block_height into r608;
    ternary r520 r43.bonded_microcredits r597.bonded_microcredits into r609;
    ternary r520 r43.microcredits_yield_per_epoch r597.microcredits_yield_per_epoch into r610;
    ternary r520 r43.commission r597.commission into r611;
    ternary r520 r43.boost r597.boost into r612;
    cast r606 r607 r608 r609 r610 r611 r612 into r613 as validator_datum;
    lt r44.block_height r48 into r614;
    lt r613.block_height r48 into r615;
    is.eq r44.microcredits_yield_per_epoch 0u128 into r616;
    is.eq r613.microcredits_yield_per_epoch 0u128 into r617;
    mul r613.boost 10_000u128 into r618;
    div r618 r49[6u32] into r619;
    add r613.microcredits_yield_per_epoch r619 into r620;
    mul r44.boost 10_000u128 into r621;
    div r621 r49[6u32] into r622;
    add r44.microcredits_yield_per_epoch r622 into r623;
    is.eq r613.validator r44.validator into r624;
    gt r620 r623 into r625;
    lt r620 r623 into r626;
    ternary r624 r625 r626 into r627;
    ternary r627 r44.delegator r613.delegator into r628;
    ternary r627 r44.validator r613.validator into r629;
    ternary r627 r44.block_height r613.block_height into r630;
    ternary r627 r44.bonded_microcredits r613.bonded_microcredits into r631;
    ternary r627 r44.microcredits_yield_per_epoch r613.microcredits_yield_per_epoch into r632;
    ternary r627 r44.commission r613.commission into r633;
    ternary r627 r44.boost r613.boost into r634;
    cast r628 r629 r630 r631 r632 r633 r634 into r635 as validator_datum;
    ternary r627 r613.delegator r44.delegator into r636;
    ternary r627 r613.validator r44.validator into r637;
    ternary r627 r613.block_height r44.block_height into r638;
    ternary r627 r613.bonded_microcredits r44.bonded_microcredits into r639;
    ternary r627 r613.microcredits_yield_per_epoch r44.microcredits_yield_per_epoch into r640;
    ternary r627 r613.commission r44.commission into r641;
    ternary r627 r613.boost r44.boost into r642;
    cast r636 r637 r638 r639 r640 r641 r642 into r643 as validator_datum;
    ternary r617 r44.delegator r635.delegator into r644;
    ternary r617 r44.validator r635.validator into r645;
    ternary r617 r44.block_height r635.block_height into r646;
    ternary r617 r44.bonded_microcredits r635.bonded_microcredits into r647;
    ternary r617 r44.microcredits_yield_per_epoch r635.microcredits_yield_per_epoch into r648;
    ternary r617 r44.commission r635.commission into r649;
    ternary r617 r44.boost r635.boost into r650;
    cast r644 r645 r646 r647 r648 r649 r650 into r651 as validator_datum;
    ternary r617 r613.delegator r643.delegator into r652;
    ternary r617 r613.validator r643.validator into r653;
    ternary r617 r613.block_height r643.block_height into r654;
    ternary r617 r613.bonded_microcredits r643.bonded_microcredits into r655;
    ternary r617 r613.microcredits_yield_per_epoch r643.microcredits_yield_per_epoch into r656;
    ternary r617 r613.commission r643.commission into r657;
    ternary r617 r613.boost r643.boost into r658;
    cast r652 r653 r654 r655 r656 r657 r658 into r659 as validator_datum;
    ternary r616 r613.delegator r651.delegator into r660;
    ternary r616 r613.validator r651.validator into r661;
    ternary r616 r613.block_height r651.block_height into r662;
    ternary r616 r613.bonded_microcredits r651.bonded_microcredits into r663;
    ternary r616 r613.microcredits_yield_per_epoch r651.microcredits_yield_per_epoch into r664;
    ternary r616 r613.commission r651.commission into r665;
    ternary r616 r613.boost r651.boost into r666;
    cast r660 r661 r662 r663 r664 r665 r666 into r667 as validator_datum;
    ternary r616 r44.delegator r659.delegator into r668;
    ternary r616 r44.validator r659.validator into r669;
    ternary r616 r44.block_height r659.block_height into r670;
    ternary r616 r44.bonded_microcredits r659.bonded_microcredits into r671;
    ternary r616 r44.microcredits_yield_per_epoch r659.microcredits_yield_per_epoch into r672;
    ternary r616 r44.commission r659.commission into r673;
    ternary r616 r44.boost r659.boost into r674;
    cast r668 r669 r670 r671 r672 r673 r674 into r675 as validator_datum;
    ternary r615 r44.delegator r667.delegator into r676;
    ternary r615 r44.validator r667.validator into r677;
    ternary r615 r44.block_height r667.block_height into r678;
    ternary r615 r44.bonded_microcredits r667.bonded_microcredits into r679;
    ternary r615 r44.microcredits_yield_per_epoch r667.microcredits_yield_per_epoch into r680;
    ternary r615 r44.commission r667.commission into r681;
    ternary r615 r44.boost r667.boost into r682;
    cast r676 r677 r678 r679 r680 r681 r682 into r683 as validator_datum;
    ternary r615 r613.delegator r675.delegator into r684;
    ternary r615 r613.validator r675.validator into r685;
    ternary r615 r613.block_height r675.block_height into r686;
    ternary r615 r613.bonded_microcredits r675.bonded_microcredits into r687;
    ternary r615 r613.microcredits_yield_per_epoch r675.microcredits_yield_per_epoch into r688;
    ternary r615 r613.commission r675.commission into r689;
    ternary r615 r613.boost r675.boost into r690;
    cast r684 r685 r686 r687 r688 r689 r690 into r691 as validator_datum;
    ternary r614 r613.delegator r683.delegator into r692;
    ternary r614 r613.validator r683.validator into r693;
    ternary r614 r613.block_height r683.block_height into r694;
    ternary r614 r613.bonded_microcredits r683.bonded_microcredits into r695;
    ternary r614 r613.microcredits_yield_per_epoch r683.microcredits_yield_per_epoch into r696;
    ternary r614 r613.commission r683.commission into r697;
    ternary r614 r613.boost r683.boost into r698;
    cast r692 r693 r694 r695 r696 r697 r698 into r699 as validator_datum;
    ternary r614 r44.delegator r691.delegator into r700;
    ternary r614 r44.validator r691.validator into r701;
    ternary r614 r44.block_height r691.block_height into r702;
    ternary r614 r44.bonded_microcredits r691.bonded_microcredits into r703;
    ternary r614 r44.microcredits_yield_per_epoch r691.microcredits_yield_per_epoch into r704;
    ternary r614 r44.commission r691.commission into r705;
    ternary r614 r44.boost r691.boost into r706;
    cast r700 r701 r702 r703 r704 r705 r706 into r707 as validator_datum;
    lt r45.block_height r48 into r708;
    lt r707.block_height r48 into r709;
    is.eq r45.microcredits_yield_per_epoch 0u128 into r710;
    is.eq r707.microcredits_yield_per_epoch 0u128 into r711;
    mul r707.boost 10_000u128 into r712;
    div r712 r49[7u32] into r713;
    add r707.microcredits_yield_per_epoch r713 into r714;
    mul r45.boost 10_000u128 into r715;
    div r715 r49[7u32] into r716;
    add r45.microcredits_yield_per_epoch r716 into r717;
    is.eq r707.validator r45.validator into r718;
    gt r714 r717 into r719;
    lt r714 r717 into r720;
    ternary r718 r719 r720 into r721;
    ternary r721 r45.delegator r707.delegator into r722;
    ternary r721 r45.validator r707.validator into r723;
    ternary r721 r45.block_height r707.block_height into r724;
    ternary r721 r45.bonded_microcredits r707.bonded_microcredits into r725;
    ternary r721 r45.microcredits_yield_per_epoch r707.microcredits_yield_per_epoch into r726;
    ternary r721 r45.commission r707.commission into r727;
    ternary r721 r45.boost r707.boost into r728;
    cast r722 r723 r724 r725 r726 r727 r728 into r729 as validator_datum;
    ternary r721 r707.delegator r45.delegator into r730;
    ternary r721 r707.validator r45.validator into r731;
    ternary r721 r707.block_height r45.block_height into r732;
    ternary r721 r707.bonded_microcredits r45.bonded_microcredits into r733;
    ternary r721 r707.microcredits_yield_per_epoch r45.microcredits_yield_per_epoch into r734;
    ternary r721 r707.commission r45.commission into r735;
    ternary r721 r707.boost r45.boost into r736;
    cast r730 r731 r732 r733 r734 r735 r736 into r737 as validator_datum;
    ternary r711 r45.delegator r729.delegator into r738;
    ternary r711 r45.validator r729.validator into r739;
    ternary r711 r45.block_height r729.block_height into r740;
    ternary r711 r45.bonded_microcredits r729.bonded_microcredits into r741;
    ternary r711 r45.microcredits_yield_per_epoch r729.microcredits_yield_per_epoch into r742;
    ternary r711 r45.commission r729.commission into r743;
    ternary r711 r45.boost r729.boost into r744;
    cast r738 r739 r740 r741 r742 r743 r744 into r745 as validator_datum;
    ternary r711 r707.delegator r737.delegator into r746;
    ternary r711 r707.validator r737.validator into r747;
    ternary r711 r707.block_height r737.block_height into r748;
    ternary r711 r707.bonded_microcredits r737.bonded_microcredits into r749;
    ternary r711 r707.microcredits_yield_per_epoch r737.microcredits_yield_per_epoch into r750;
    ternary r711 r707.commission r737.commission into r751;
    ternary r711 r707.boost r737.boost into r752;
    cast r746 r747 r748 r749 r750 r751 r752 into r753 as validator_datum;
    ternary r710 r707.delegator r745.delegator into r754;
    ternary r710 r707.validator r745.validator into r755;
    ternary r710 r707.block_height r745.block_height into r756;
    ternary r710 r707.bonded_microcredits r745.bonded_microcredits into r757;
    ternary r710 r707.microcredits_yield_per_epoch r745.microcredits_yield_per_epoch into r758;
    ternary r710 r707.commission r745.commission into r759;
    ternary r710 r707.boost r745.boost into r760;
    cast r754 r755 r756 r757 r758 r759 r760 into r761 as validator_datum;
    ternary r710 r45.delegator r753.delegator into r762;
    ternary r710 r45.validator r753.validator into r763;
    ternary r710 r45.block_height r753.block_height into r764;
    ternary r710 r45.bonded_microcredits r753.bonded_microcredits into r765;
    ternary r710 r45.microcredits_yield_per_epoch r753.microcredits_yield_per_epoch into r766;
    ternary r710 r45.commission r753.commission into r767;
    ternary r710 r45.boost r753.boost into r768;
    cast r762 r763 r764 r765 r766 r767 r768 into r769 as validator_datum;
    ternary r709 r45.delegator r761.delegator into r770;
    ternary r709 r45.validator r761.validator into r771;
    ternary r709 r45.block_height r761.block_height into r772;
    ternary r709 r45.bonded_microcredits r761.bonded_microcredits into r773;
    ternary r709 r45.microcredits_yield_per_epoch r761.microcredits_yield_per_epoch into r774;
    ternary r709 r45.commission r761.commission into r775;
    ternary r709 r45.boost r761.boost into r776;
    cast r770 r771 r772 r773 r774 r775 r776 into r777 as validator_datum;
    ternary r709 r707.delegator r769.delegator into r778;
    ternary r709 r707.validator r769.validator into r779;
    ternary r709 r707.block_height r769.block_height into r780;
    ternary r709 r707.bonded_microcredits r769.bonded_microcredits into r781;
    ternary r709 r707.microcredits_yield_per_epoch r769.microcredits_yield_per_epoch into r782;
    ternary r709 r707.commission r769.commission into r783;
    ternary r709 r707.boost r769.boost into r784;
    cast r778 r779 r780 r781 r782 r783 r784 into r785 as validator_datum;
    ternary r708 r707.delegator r777.delegator into r786;
    ternary r708 r707.validator r777.validator into r787;
    ternary r708 r707.block_height r777.block_height into r788;
    ternary r708 r707.bonded_microcredits r777.bonded_microcredits into r789;
    ternary r708 r707.microcredits_yield_per_epoch r777.microcredits_yield_per_epoch into r790;
    ternary r708 r707.commission r777.commission into r791;
    ternary r708 r707.boost r777.boost into r792;
    cast r786 r787 r788 r789 r790 r791 r792 into r793 as validator_datum;
    ternary r708 r45.delegator r785.delegator into r794;
    ternary r708 r45.validator r785.validator into r795;
    ternary r708 r45.block_height r785.block_height into r796;
    ternary r708 r45.bonded_microcredits r785.bonded_microcredits into r797;
    ternary r708 r45.microcredits_yield_per_epoch r785.microcredits_yield_per_epoch into r798;
    ternary r708 r45.commission r785.commission into r799;
    ternary r708 r45.boost r785.boost into r800;
    cast r794 r795 r796 r797 r798 r799 r800 into r801 as validator_datum;
    lt r46.block_height r48 into r802;
    lt r801.block_height r48 into r803;
    is.eq r46.microcredits_yield_per_epoch 0u128 into r804;
    is.eq r801.microcredits_yield_per_epoch 0u128 into r805;
    mul r801.boost 10_000u128 into r806;
    div r806 r49[8u32] into r807;
    add r801.microcredits_yield_per_epoch r807 into r808;
    mul r46.boost 10_000u128 into r809;
    div r809 r49[8u32] into r810;
    add r46.microcredits_yield_per_epoch r810 into r811;
    is.eq r801.validator r46.validator into r812;
    gt r808 r811 into r813;
    lt r808 r811 into r814;
    ternary r812 r813 r814 into r815;
    ternary r815 r46.delegator r801.delegator into r816;
    ternary r815 r46.validator r801.validator into r817;
    ternary r815 r46.block_height r801.block_height into r818;
    ternary r815 r46.bonded_microcredits r801.bonded_microcredits into r819;
    ternary r815 r46.microcredits_yield_per_epoch r801.microcredits_yield_per_epoch into r820;
    ternary r815 r46.commission r801.commission into r821;
    ternary r815 r46.boost r801.boost into r822;
    cast r816 r817 r818 r819 r820 r821 r822 into r823 as validator_datum;
    ternary r815 r801.delegator r46.delegator into r824;
    ternary r815 r801.validator r46.validator into r825;
    ternary r815 r801.block_height r46.block_height into r826;
    ternary r815 r801.bonded_microcredits r46.bonded_microcredits into r827;
    ternary r815 r801.microcredits_yield_per_epoch r46.microcredits_yield_per_epoch into r828;
    ternary r815 r801.commission r46.commission into r829;
    ternary r815 r801.boost r46.boost into r830;
    cast r824 r825 r826 r827 r828 r829 r830 into r831 as validator_datum;
    ternary r805 r46.delegator r823.delegator into r832;
    ternary r805 r46.validator r823.validator into r833;
    ternary r805 r46.block_height r823.block_height into r834;
    ternary r805 r46.bonded_microcredits r823.bonded_microcredits into r835;
    ternary r805 r46.microcredits_yield_per_epoch r823.microcredits_yield_per_epoch into r836;
    ternary r805 r46.commission r823.commission into r837;
    ternary r805 r46.boost r823.boost into r838;
    cast r832 r833 r834 r835 r836 r837 r838 into r839 as validator_datum;
    ternary r805 r801.delegator r831.delegator into r840;
    ternary r805 r801.validator r831.validator into r841;
    ternary r805 r801.block_height r831.block_height into r842;
    ternary r805 r801.bonded_microcredits r831.bonded_microcredits into r843;
    ternary r805 r801.microcredits_yield_per_epoch r831.microcredits_yield_per_epoch into r844;
    ternary r805 r801.commission r831.commission into r845;
    ternary r805 r801.boost r831.boost into r846;
    cast r840 r841 r842 r843 r844 r845 r846 into r847 as validator_datum;
    ternary r804 r801.delegator r839.delegator into r848;
    ternary r804 r801.validator r839.validator into r849;
    ternary r804 r801.block_height r839.block_height into r850;
    ternary r804 r801.bonded_microcredits r839.bonded_microcredits into r851;
    ternary r804 r801.microcredits_yield_per_epoch r839.microcredits_yield_per_epoch into r852;
    ternary r804 r801.commission r839.commission into r853;
    ternary r804 r801.boost r839.boost into r854;
    cast r848 r849 r850 r851 r852 r853 r854 into r855 as validator_datum;
    ternary r804 r46.delegator r847.delegator into r856;
    ternary r804 r46.validator r847.validator into r857;
    ternary r804 r46.block_height r847.block_height into r858;
    ternary r804 r46.bonded_microcredits r847.bonded_microcredits into r859;
    ternary r804 r46.microcredits_yield_per_epoch r847.microcredits_yield_per_epoch into r860;
    ternary r804 r46.commission r847.commission into r861;
    ternary r804 r46.boost r847.boost into r862;
    cast r856 r857 r858 r859 r860 r861 r862 into r863 as validator_datum;
    ternary r803 r46.delegator r855.delegator into r864;
    ternary r803 r46.validator r855.validator into r865;
    ternary r803 r46.block_height r855.block_height into r866;
    ternary r803 r46.bonded_microcredits r855.bonded_microcredits into r867;
    ternary r803 r46.microcredits_yield_per_epoch r855.microcredits_yield_per_epoch into r868;
    ternary r803 r46.commission r855.commission into r869;
    ternary r803 r46.boost r855.boost into r870;
    cast r864 r865 r866 r867 r868 r869 r870 into r871 as validator_datum;
    ternary r803 r801.delegator r863.delegator into r872;
    ternary r803 r801.validator r863.validator into r873;
    ternary r803 r801.block_height r863.block_height into r874;
    ternary r803 r801.bonded_microcredits r863.bonded_microcredits into r875;
    ternary r803 r801.microcredits_yield_per_epoch r863.microcredits_yield_per_epoch into r876;
    ternary r803 r801.commission r863.commission into r877;
    ternary r803 r801.boost r863.boost into r878;
    cast r872 r873 r874 r875 r876 r877 r878 into r879 as validator_datum;
    ternary r802 r801.delegator r871.delegator into r880;
    ternary r802 r801.validator r871.validator into r881;
    ternary r802 r801.block_height r871.block_height into r882;
    ternary r802 r801.bonded_microcredits r871.bonded_microcredits into r883;
    ternary r802 r801.microcredits_yield_per_epoch r871.microcredits_yield_per_epoch into r884;
    ternary r802 r801.commission r871.commission into r885;
    ternary r802 r801.boost r871.boost into r886;
    cast r880 r881 r882 r883 r884 r885 r886 into r887 as validator_datum;
    ternary r802 r46.delegator r879.delegator into r888;
    ternary r802 r46.validator r879.validator into r889;
    ternary r802 r46.block_height r879.block_height into r890;
    ternary r802 r46.bonded_microcredits r879.bonded_microcredits into r891;
    ternary r802 r46.microcredits_yield_per_epoch r879.microcredits_yield_per_epoch into r892;
    ternary r802 r46.commission r879.commission into r893;
    ternary r802 r46.boost r879.boost into r894;
    cast r888 r889 r890 r891 r892 r893 r894 into r895 as validator_datum;
    lt r47.block_height r48 into r896;
    lt r895.block_height r48 into r897;
    is.eq r47.microcredits_yield_per_epoch 0u128 into r898;
    is.eq r895.microcredits_yield_per_epoch 0u128 into r899;
    mul r895.boost 10_000u128 into r900;
    div r900 r49[9u32] into r901;
    add r895.microcredits_yield_per_epoch r901 into r902;
    mul r47.boost 10_000u128 into r903;
    div r903 r49[9u32] into r904;
    add r47.microcredits_yield_per_epoch r904 into r905;
    is.eq r895.validator r47.validator into r906;
    gt r902 r905 into r907;
    lt r902 r905 into r908;
    ternary r906 r907 r908 into r909;
    ternary r909 r47.delegator r895.delegator into r910;
    ternary r909 r47.validator r895.validator into r911;
    ternary r909 r47.block_height r895.block_height into r912;
    ternary r909 r47.bonded_microcredits r895.bonded_microcredits into r913;
    ternary r909 r47.microcredits_yield_per_epoch r895.microcredits_yield_per_epoch into r914;
    ternary r909 r47.commission r895.commission into r915;
    ternary r909 r47.boost r895.boost into r916;
    cast r910 r911 r912 r913 r914 r915 r916 into r917 as validator_datum;
    ternary r909 r895.delegator r47.delegator into r918;
    ternary r909 r895.validator r47.validator into r919;
    ternary r909 r895.block_height r47.block_height into r920;
    ternary r909 r895.bonded_microcredits r47.bonded_microcredits into r921;
    ternary r909 r895.microcredits_yield_per_epoch r47.microcredits_yield_per_epoch into r922;
    ternary r909 r895.commission r47.commission into r923;
    ternary r909 r895.boost r47.boost into r924;
    cast r918 r919 r920 r921 r922 r923 r924 into r925 as validator_datum;
    ternary r899 r47.delegator r917.delegator into r926;
    ternary r899 r47.validator r917.validator into r927;
    ternary r899 r47.block_height r917.block_height into r928;
    ternary r899 r47.bonded_microcredits r917.bonded_microcredits into r929;
    ternary r899 r47.microcredits_yield_per_epoch r917.microcredits_yield_per_epoch into r930;
    ternary r899 r47.commission r917.commission into r931;
    ternary r899 r47.boost r917.boost into r932;
    cast r926 r927 r928 r929 r930 r931 r932 into r933 as validator_datum;
    ternary r899 r895.delegator r925.delegator into r934;
    ternary r899 r895.validator r925.validator into r935;
    ternary r899 r895.block_height r925.block_height into r936;
    ternary r899 r895.bonded_microcredits r925.bonded_microcredits into r937;
    ternary r899 r895.microcredits_yield_per_epoch r925.microcredits_yield_per_epoch into r938;
    ternary r899 r895.commission r925.commission into r939;
    ternary r899 r895.boost r925.boost into r940;
    cast r934 r935 r936 r937 r938 r939 r940 into r941 as validator_datum;
    ternary r898 r895.delegator r933.delegator into r942;
    ternary r898 r895.validator r933.validator into r943;
    ternary r898 r895.block_height r933.block_height into r944;
    ternary r898 r895.bonded_microcredits r933.bonded_microcredits into r945;
    ternary r898 r895.microcredits_yield_per_epoch r933.microcredits_yield_per_epoch into r946;
    ternary r898 r895.commission r933.commission into r947;
    ternary r898 r895.boost r933.boost into r948;
    cast r942 r943 r944 r945 r946 r947 r948 into r949 as validator_datum;
    ternary r898 r47.delegator r941.delegator into r950;
    ternary r898 r47.validator r941.validator into r951;
    ternary r898 r47.block_height r941.block_height into r952;
    ternary r898 r47.bonded_microcredits r941.bonded_microcredits into r953;
    ternary r898 r47.microcredits_yield_per_epoch r941.microcredits_yield_per_epoch into r954;
    ternary r898 r47.commission r941.commission into r955;
    ternary r898 r47.boost r941.boost into r956;
    cast r950 r951 r952 r953 r954 r955 r956 into r957 as validator_datum;
    ternary r897 r47.delegator r949.delegator into r958;
    ternary r897 r47.validator r949.validator into r959;
    ternary r897 r47.block_height r949.block_height into r960;
    ternary r897 r47.bonded_microcredits r949.bonded_microcredits into r961;
    ternary r897 r47.microcredits_yield_per_epoch r949.microcredits_yield_per_epoch into r962;
    ternary r897 r47.commission r949.commission into r963;
    ternary r897 r47.boost r949.boost into r964;
    cast r958 r959 r960 r961 r962 r963 r964 into r965 as validator_datum;
    ternary r897 r895.delegator r957.delegator into r966;
    ternary r897 r895.validator r957.validator into r967;
    ternary r897 r895.block_height r957.block_height into r968;
    ternary r897 r895.bonded_microcredits r957.bonded_microcredits into r969;
    ternary r897 r895.microcredits_yield_per_epoch r957.microcredits_yield_per_epoch into r970;
    ternary r897 r895.commission r957.commission into r971;
    ternary r897 r895.boost r957.boost into r972;
    cast r966 r967 r968 r969 r970 r971 r972 into r973 as validator_datum;
    ternary r896 r895.delegator r965.delegator into r974;
    ternary r896 r895.validator r965.validator into r975;
    ternary r896 r895.block_height r965.block_height into r976;
    ternary r896 r895.bonded_microcredits r965.bonded_microcredits into r977;
    ternary r896 r895.microcredits_yield_per_epoch r965.microcredits_yield_per_epoch into r978;
    ternary r896 r895.commission r965.commission into r979;
    ternary r896 r895.boost r965.boost into r980;
    cast r974 r975 r976 r977 r978 r979 r980 into r981 as validator_datum;
    ternary r896 r47.delegator r973.delegator into r982;
    ternary r896 r47.validator r973.validator into r983;
    ternary r896 r47.block_height r973.block_height into r984;
    ternary r896 r47.bonded_microcredits r973.bonded_microcredits into r985;
    ternary r896 r47.microcredits_yield_per_epoch r973.microcredits_yield_per_epoch into r986;
    ternary r896 r47.commission r973.commission into r987;
    ternary r896 r47.boost r973.boost into r988;
    cast r982 r983 r984 r985 r986 r987 r988 into r989 as validator_datum;
    cast  r135 r229 r323 r417 r511 r605 r699 r793 r887 r981 r989 into r990 as [validator_datum; 11u32];
    is.eq r990[0u32].delegator r35.delegator into r991;
    is.eq r990[0u32].validator r35.validator into r992;
    or r991 r992 into r993;
    cast 0u8 into r994 as i8;
    add 0u8 1u8 into r995;
    ternary r993 r994 11i8 into r996;
    ternary r993 r995 0u8 into r997;
    is.eq r990[1u32].delegator r35.delegator into r998;
    is.eq r990[1u32].validator r35.validator into r999;
    or r998 r999 into r1000;
    cast 1u8 into r1001 as i8;
    add r997 1u8 into r1002;
    ternary r1000 r1001 r996 into r1003;
    ternary r1000 r1002 r997 into r1004;
    is.eq r990[2u32].delegator r35.delegator into r1005;
    is.eq r990[2u32].validator r35.validator into r1006;
    or r1005 r1006 into r1007;
    cast 2u8 into r1008 as i8;
    add r1004 1u8 into r1009;
    ternary r1007 r1008 r1003 into r1010;
    ternary r1007 r1009 r1004 into r1011;
    is.eq r990[3u32].delegator r35.delegator into r1012;
    is.eq r990[3u32].validator r35.validator into r1013;
    or r1012 r1013 into r1014;
    cast 3u8 into r1015 as i8;
    add r1011 1u8 into r1016;
    ternary r1014 r1015 r1010 into r1017;
    ternary r1014 r1016 r1011 into r1018;
    is.eq r990[4u32].delegator r35.delegator into r1019;
    is.eq r990[4u32].validator r35.validator into r1020;
    or r1019 r1020 into r1021;
    cast 4u8 into r1022 as i8;
    add r1018 1u8 into r1023;
    ternary r1021 r1022 r1017 into r1024;
    ternary r1021 r1023 r1018 into r1025;
    is.eq r990[5u32].delegator r35.delegator into r1026;
    is.eq r990[5u32].validator r35.validator into r1027;
    or r1026 r1027 into r1028;
    cast 5u8 into r1029 as i8;
    add r1025 1u8 into r1030;
    ternary r1028 r1029 r1024 into r1031;
    ternary r1028 r1030 r1025 into r1032;
    is.eq r990[6u32].delegator r35.delegator into r1033;
    is.eq r990[6u32].validator r35.validator into r1034;
    or r1033 r1034 into r1035;
    cast 6u8 into r1036 as i8;
    add r1032 1u8 into r1037;
    ternary r1035 r1036 r1031 into r1038;
    ternary r1035 r1037 r1032 into r1039;
    is.eq r990[7u32].delegator r35.delegator into r1040;
    is.eq r990[7u32].validator r35.validator into r1041;
    or r1040 r1041 into r1042;
    cast 7u8 into r1043 as i8;
    add r1039 1u8 into r1044;
    ternary r1042 r1043 r1038 into r1045;
    ternary r1042 r1044 r1039 into r1046;
    is.eq r990[8u32].delegator r35.delegator into r1047;
    is.eq r990[8u32].validator r35.validator into r1048;
    or r1047 r1048 into r1049;
    cast 8u8 into r1050 as i8;
    add r1046 1u8 into r1051;
    ternary r1049 r1050 r1045 into r1052;
    ternary r1049 r1051 r1046 into r1053;
    is.eq r990[9u32].delegator r35.delegator into r1054;
    is.eq r990[9u32].validator r35.validator into r1055;
    or r1054 r1055 into r1056;
    cast 9u8 into r1057 as i8;
    add r1053 1u8 into r1058;
    ternary r1056 r1057 r1052 into r1059;
    ternary r1056 r1058 r1053 into r1060;
    gt r1060 1u8 into r1061;
    ternary r1061 r1059 11i8 into r1062;
    lt r1062 2i8 into r1063;
    ternary r1063 r990[2u32].delegator r990[1u32].delegator into r1064;
    lt r1062 3i8 into r1065;
    ternary r1065 r990[3u32].delegator r990[2u32].delegator into r1066;
    lt r1062 4i8 into r1067;
    ternary r1067 r990[4u32].delegator r990[3u32].delegator into r1068;
    lt r1062 5i8 into r1069;
    ternary r1069 r990[5u32].delegator r990[4u32].delegator into r1070;
    lt r1062 6i8 into r1071;
    ternary r1071 r990[6u32].delegator r990[5u32].delegator into r1072;
    lt r1062 7i8 into r1073;
    ternary r1073 r990[7u32].delegator r990[6u32].delegator into r1074;
    lt r1062 8i8 into r1075;
    ternary r1075 r990[8u32].delegator r990[7u32].delegator into r1076;
    lt r1062 9i8 into r1077;
    ternary r1077 r990[9u32].delegator r990[8u32].delegator into r1078;
    lt r1062 10i8 into r1079;
    ternary r1079 r990[10u32].delegator r990[9u32].delegator into r1080;
    cast  r990[0u32].delegator r1064 r1066 r1068 r1070 r1072 r1074 r1076 r1078 r1080 into r1081 as [address; 10u32];
    set r1081 into top_validators[0u8];
    set r35 into validator_data[r0];






function remove_delegator:
    async remove_delegator self.caller into r0;
    output r0 as pondo_oracle.aleo/remove_delegator.future;

finalize remove_delegator:
    input r0 as address.public;
    rem block.height 120_960u32 into r1;
    lt r1 103_680u32 into r2;
    assert.eq r2 true;
    contains delegator_to_validator[r0] into r3;
    branch.eq r3 false to end_then_0_0;
    remove delegator_to_validator[r0];
    branch.eq true true to end_otherwise_0_1;
    position end_then_0_0;
    position end_otherwise_0_1;
    contains validator_data[r0] into r4;
    branch.eq r4 false to end_then_0_2;
    remove validator_data[r0];
    branch.eq true true to end_otherwise_0_3;
    position end_then_0_2;
    position end_otherwise_0_3;
    get top_validators[0u8] into r5;
    is.eq r5[0u32] r0 into r6;
    ternary r6 aleo1qqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqq3ljyzc r5[0u32] into r7;
    is.eq r5[1u32] r0 into r8;
    ternary r8 aleo1qqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqq3ljyzc r5[1u32] into r9;
    is.eq r5[2u32] r0 into r10;
    ternary r10 aleo1qqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqq3ljyzc r5[2u32] into r11;
    is.eq r5[3u32] r0 into r12;
    ternary r12 aleo1qqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqq3ljyzc r5[3u32] into r13;
    is.eq r5[4u32] r0 into r14;
    ternary r14 aleo1qqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqq3ljyzc r5[4u32] into r15;
    is.eq r5[5u32] r0 into r16;
    ternary r16 aleo1qqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqq3ljyzc r5[5u32] into r17;
    is.eq r5[6u32] r0 into r18;
    ternary r18 aleo1qqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqq3ljyzc r5[6u32] into r19;
    is.eq r5[7u32] r0 into r20;
    ternary r20 aleo1qqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqq3ljyzc r5[7u32] into r21;
    is.eq r5[8u32] r0 into r22;
    ternary r22 aleo1qqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqq3ljyzc r5[8u32] into r23;
    is.eq r5[9u32] r0 into r24;
    ternary r24 aleo1qqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqq3ljyzc r5[9u32] into r25;
    is.eq r7 aleo1qqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqq3ljyzc into r26;
    ternary r26 r9 r7 into r27;
    ternary r26 r7 r9 into r28;
    is.eq r28 aleo1qqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqq3ljyzc into r29;
    ternary r29 r11 r28 into r30;
    ternary r29 r28 r11 into r31;
    is.eq r31 aleo1qqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqq3ljyzc into r32;
    ternary r32 r13 r31 into r33;
    ternary r32 r31 r13 into r34;
    is.eq r34 aleo1qqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqq3ljyzc into r35;
    ternary r35 r15 r34 into r36;
    ternary r35 r34 r15 into r37;
    is.eq r37 aleo1qqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqq3ljyzc into r38;
    ternary r38 r17 r37 into r39;
    ternary r38 r37 r17 into r40;
    is.eq r40 aleo1qqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqq3ljyzc into r41;
    ternary r41 r19 r40 into r42;
    ternary r41 r40 r19 into r43;
    is.eq r43 aleo1qqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqq3ljyzc into r44;
    ternary r44 r21 r43 into r45;
    ternary r44 r43 r21 into r46;
    is.eq r46 aleo1qqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqq3ljyzc into r47;
    ternary r47 r23 r46 into r48;
    ternary r47 r46 r23 into r49;
    is.eq r49 aleo1qqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqq3ljyzc into r50;
    ternary r50 r25 r49 into r51;
    ternary r50 r49 r25 into r52;
    cast  r27 r30 r33 r36 r39 r42 r45 r48 r51 r52 into r53 as [address; 10u32];
    set r53 into top_validators[0u8];




function pondo_ban_validator:
    input r0 as address.public;
    assert.neq r0 aleo1qqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqq3ljyzc;
    async pondo_ban_validator r0 self.caller into r1;
    output r1 as pondo_oracle.aleo/pondo_ban_validator.future;

finalize pondo_ban_validator:
    input r0 as address.public;
    input r1 as address.public;
    contains control_addresses[r1] into r2;
    assert.eq r2 true;
    set true into banned_validators[r0];




function ban_validator:
    input r0 as address.public;
    async ban_validator r0 into r1;
    output r1 as pondo_oracle.aleo/ban_validator.future;

finalize ban_validator:
    input r0 as address.public;
    get delegator_to_validator[r0] into r1;
    rem block.height 120_960u32 into r2;
    gte r2 103_680u32 into r3;
    assert.eq r3 true;
    add 50u8 1u8 into r4;
    cast false r4 into r5 as committee_state;
    get.or_use credits.aleo/committee[r1] r5 into r6;
    not r6.is_open into r7;
    gt r6.commission 50u8 into r8;
    or r7 r8 into r9;
    assert.eq r9 true;
    set true into banned_validators[r1];




function set_pondo_tvl:
    input r0 as u64.public;
    assert.eq self.caller pondo_core_protocol.aleo;
    async set_pondo_tvl r0 into r1;
    output r1 as pondo_oracle.aleo/set_pondo_tvl.future;

finalize set_pondo_tvl:
    input r0 as u64.public;
    set r0 into pondo_tvl[0u8];




function ban_self:
    input r0 as address.private;
    async ban_self r0 self.caller into r1;
    output r1 as pondo_oracle.aleo/ban_self.future;

finalize ban_self:
    input r0 as address.public;
    input r1 as address.public;
    get credits.aleo/withdraw[r0] into r2;
    assert.eq r2 r1;
    contains credits.aleo/committee[r0] into r3;
    assert.eq r3 true;
    set true into banned_validators[r0];




function boost_validator:
    input r0 as address.public;
    input r1 as u64.public;
    call credits.aleo/transfer_public_as_signer pondo_core_protocol.aleo r1 into r2;
    async boost_validator r2 r0 r1 into r3;
    output r3 as pondo_oracle.aleo/boost_validator.future;

finalize boost_validator:
    input r0 as credits.aleo/transfer_public_as_signer.future;
    input r1 as address.public;
    input r2 as u64.public;
    await r0;
    div block.height 120_960u32 into r3;
    rem block.height 120_960u32 into r4;
    gte r4 103_680u32 into r5;
    not r5 into r6;
    assert.eq r6 true;
    cast 0u32 0u64 into r7 as validator_boost;
    get.or_use validator_boosting[r1] r7 into r8;
    is.eq r8.epoch r3 into r9;
    add r8.boost_amount r2 into r10;
    ternary r9 r10 r2 into r11;
    cast r3 r11 into r12 as validator_boost;
    set r12 into validator_boosting[r1];

